// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: allprotos/broker.proto

package brokerpb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	commonpb "gitlab.com/shanpanze/grpc-repo/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderResultStatus int32

const (
	OrderResultStatus_UNKNOWN_ORDER_RESULT_STATUS OrderResultStatus = 0
	OrderResultStatus_FILLED                      OrderResultStatus = 1
	OrderResultStatus_INVALID_API_KEY             OrderResultStatus = 2
	OrderResultStatus_UNKNOWN_REAL_TIME_PRICE     OrderResultStatus = 3 // The realtime price must be available in cache to check for minValue/maxValue conditions
	OrderResultStatus_PRICE_NOT_BETWEEN_MIN_MAX   OrderResultStatus = 4
	OrderResultStatus_ERROR_FROM_EXCHANGE         OrderResultStatus = 5
	OrderResultStatus_CANCELLED                   OrderResultStatus = 6
)

// Enum value maps for OrderResultStatus.
var (
	OrderResultStatus_name = map[int32]string{
		0: "UNKNOWN_ORDER_RESULT_STATUS",
		1: "FILLED",
		2: "INVALID_API_KEY",
		3: "UNKNOWN_REAL_TIME_PRICE",
		4: "PRICE_NOT_BETWEEN_MIN_MAX",
		5: "ERROR_FROM_EXCHANGE",
		6: "CANCELLED",
	}
	OrderResultStatus_value = map[string]int32{
		"UNKNOWN_ORDER_RESULT_STATUS": 0,
		"FILLED":                      1,
		"INVALID_API_KEY":             2,
		"UNKNOWN_REAL_TIME_PRICE":     3,
		"PRICE_NOT_BETWEEN_MIN_MAX":   4,
		"ERROR_FROM_EXCHANGE":         5,
		"CANCELLED":                   6,
	}
)

func (x OrderResultStatus) Enum() *OrderResultStatus {
	p := new(OrderResultStatus)
	*p = x
	return p
}

func (x OrderResultStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderResultStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_broker_proto_enumTypes[0].Descriptor()
}

func (OrderResultStatus) Type() protoreflect.EnumType {
	return &file_allprotos_broker_proto_enumTypes[0]
}

func (x OrderResultStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderResultStatus.Descriptor instead.
func (OrderResultStatus) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_broker_proto_rawDescGZIP(), []int{0}
}

type PairOhlcvs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair     string            `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	Ohlcvs   []*Ohlcv          `protobuf:"bytes,2,rep,name=ohlcvs,proto3" json:"ohlcvs,omitempty"`
	Interval commonpb.Interval `protobuf:"varint,3,opt,name=interval,proto3,enum=common.Interval" json:"interval,omitempty"`
}

func (x *PairOhlcvs) Reset() {
	*x = PairOhlcvs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairOhlcvs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairOhlcvs) ProtoMessage() {}

func (x *PairOhlcvs) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairOhlcvs.ProtoReflect.Descriptor instead.
func (*PairOhlcvs) Descriptor() ([]byte, []int) {
	return file_allprotos_broker_proto_rawDescGZIP(), []int{0}
}

func (x *PairOhlcvs) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *PairOhlcvs) GetOhlcvs() []*Ohlcv {
	if x != nil {
		return x.Ohlcvs
	}
	return nil
}

func (x *PairOhlcvs) GetInterval() commonpb.Interval {
	if x != nil {
		return x.Interval
	}
	return commonpb.Interval(0)
}

type Ohlcv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenTime         *timestamp.Timestamp `protobuf:"bytes,1,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	Open             float64              `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	High             float64              `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Low              float64              `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	Close            float64              `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume           float64              `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
	CloseTime        *timestamp.Timestamp `protobuf:"bytes,7,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	QuoteAssetVolume float64              `protobuf:"fixed64,8,opt,name=quote_asset_volume,json=quoteAssetVolume,proto3" json:"quote_asset_volume,omitempty"`
	NumberOfTrades   int32                `protobuf:"varint,9,opt,name=number_of_trades,json=numberOfTrades,proto3" json:"number_of_trades,omitempty"`
}

func (x *Ohlcv) Reset() {
	*x = Ohlcv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ohlcv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ohlcv) ProtoMessage() {}

func (x *Ohlcv) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ohlcv.ProtoReflect.Descriptor instead.
func (*Ohlcv) Descriptor() ([]byte, []int) {
	return file_allprotos_broker_proto_rawDescGZIP(), []int{1}
}

func (x *Ohlcv) GetOpenTime() *timestamp.Timestamp {
	if x != nil {
		return x.OpenTime
	}
	return nil
}

func (x *Ohlcv) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Ohlcv) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Ohlcv) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Ohlcv) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Ohlcv) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Ohlcv) GetCloseTime() *timestamp.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *Ohlcv) GetQuoteAssetVolume() float64 {
	if x != nil {
		return x.QuoteAssetVolume
	}
	return 0
}

func (x *Ohlcv) GetNumberOfTrades() int32 {
	if x != nil {
		return x.NumberOfTrades
	}
	return 0
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionId    uint32  `protobuf:"varint,1,opt,name=position_id,json=positionId,proto3" json:"position_id,omitempty"`
	Pair          string  `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	Side          string  `protobuf:"bytes,3,opt,name=side,proto3" json:"side,omitempty"`                                    // BUY or SELL
	Type          string  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                    // MARKET or LIMIT or ...
	Amount        float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`                              // for BTCUSDT, it refers to the quantity of BTC
	QuoteAmount   float64 `protobuf:"fixed64,6,opt,name=quote_amount,json=quoteAmount,proto3" json:"quote_amount,omitempty"` // for BTCUSDT, it refers to the quantity of USDT
	MinValue      float64 `protobuf:"fixed64,7,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue      float64 `protobuf:"fixed64,8,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	BaseCurrency  string  `protobuf:"bytes,9,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	StopLosePrice float64 `protobuf:"fixed64,10,opt,name=stop_lose_price,json=stopLosePrice,proto3" json:"stop_lose_price,omitempty"`
	TrackId       string  `protobuf:"bytes,11,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	Leverage      uint32  `protobuf:"varint,12,opt,name=leverage,proto3" json:"leverage,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_allprotos_broker_proto_rawDescGZIP(), []int{2}
}

func (x *Order) GetPositionId() uint32 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *Order) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *Order) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Order) GetQuoteAmount() float64 {
	if x != nil {
		return x.QuoteAmount
	}
	return 0
}

func (x *Order) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *Order) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *Order) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *Order) GetStopLosePrice() float64 {
	if x != nil {
		return x.StopLosePrice
	}
	return 0
}

func (x *Order) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

func (x *Order) GetLeverage() uint32 {
	if x != nil {
		return x.Leverage
	}
	return 0
}

type OrderResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PositionId  uint32            `protobuf:"varint,1,opt,name=position_id,json=positionId,proto3" json:"position_id,omitempty"`
	Side        string            `protobuf:"bytes,2,opt,name=side,proto3" json:"side,omitempty"`
	Amount      float64           `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                              // for BTCUSDT, it refers to the quantity of BTC
	QuoteAmount float64           `protobuf:"fixed64,4,opt,name=quote_amount,json=quoteAmount,proto3" json:"quote_amount,omitempty"` // for BTCUSDT, it refers to the quantity of USDT
	Price       float64           `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Fee         float64           `protobuf:"fixed64,6,opt,name=fee,proto3" json:"fee,omitempty"`
	Status      OrderResultStatus `protobuf:"varint,7,opt,name=status,proto3,enum=broker.OrderResultStatus" json:"status,omitempty"`
	TrackId     string            `protobuf:"bytes,8,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	RealizedPnl float64           `protobuf:"fixed64,9,opt,name=realized_pnl,json=realizedPnl,proto3" json:"realized_pnl,omitempty"`
}

func (x *OrderResult) Reset() {
	*x = OrderResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_broker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResult) ProtoMessage() {}

func (x *OrderResult) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_broker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResult.ProtoReflect.Descriptor instead.
func (*OrderResult) Descriptor() ([]byte, []int) {
	return file_allprotos_broker_proto_rawDescGZIP(), []int{3}
}

func (x *OrderResult) GetPositionId() uint32 {
	if x != nil {
		return x.PositionId
	}
	return 0
}

func (x *OrderResult) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *OrderResult) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderResult) GetQuoteAmount() float64 {
	if x != nil {
		return x.QuoteAmount
	}
	return 0
}

func (x *OrderResult) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderResult) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *OrderResult) GetStatus() OrderResultStatus {
	if x != nil {
		return x.Status
	}
	return OrderResultStatus_UNKNOWN_ORDER_RESULT_STATUS
}

func (x *OrderResult) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

func (x *OrderResult) GetRealizedPnl() float64 {
	if x != nil {
		return x.RealizedPnl
	}
	return 0
}

type OpenSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalerId uint32 `protobuf:"varint,1,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	SignalId   uint32 `protobuf:"varint,2,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
	Pair       string `protobuf:"bytes,3,opt,name=pair,proto3" json:"pair,omitempty"`
	TrackId    string `protobuf:"bytes,4,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
}

func (x *OpenSignal) Reset() {
	*x = OpenSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_broker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenSignal) ProtoMessage() {}

func (x *OpenSignal) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_broker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenSignal.ProtoReflect.Descriptor instead.
func (*OpenSignal) Descriptor() ([]byte, []int) {
	return file_allprotos_broker_proto_rawDescGZIP(), []int{4}
}

func (x *OpenSignal) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *OpenSignal) GetSignalId() uint32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *OpenSignal) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *OpenSignal) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

type CloseSignal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalerId uint32 `protobuf:"varint,1,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	SignalId   uint32 `protobuf:"varint,2,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
	Pair       string `protobuf:"bytes,3,opt,name=pair,proto3" json:"pair,omitempty"`
	TrackId    string `protobuf:"bytes,4,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
}

func (x *CloseSignal) Reset() {
	*x = CloseSignal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_broker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSignal) ProtoMessage() {}

func (x *CloseSignal) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_broker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSignal.ProtoReflect.Descriptor instead.
func (*CloseSignal) Descriptor() ([]byte, []int) {
	return file_allprotos_broker_proto_rawDescGZIP(), []int{5}
}

func (x *CloseSignal) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *CloseSignal) GetSignalId() uint32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *CloseSignal) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *CloseSignal) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

var File_allprotos_broker_proto protoreflect.FileDescriptor

var file_allprotos_broker_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x6c, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x61, 0x6c, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x0a, 0x50, 0x61, 0x69,
	0x72, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x6f,
	0x68, 0x6c, 0x63, 0x76, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x2e, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x52, 0x06, 0x6f, 0x68, 0x6c, 0x63,
	0x76, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x22, 0xbb, 0x02, 0x0a, 0x05, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x10, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f,
	0x66, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0xdd,
	0x02, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x26, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x6f,
	0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x22, 0x96,
	0x02, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x5f, 0x70, 0x6e, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x50, 0x6e, 0x6c, 0x22, 0x79, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x49, 0x64, 0x22, 0x7a, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x2a, 0xb9,
	0x01, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x50, 0x49,
	0x5f, 0x4b, 0x45, 0x59, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x43,
	0x45, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x52, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x5f, 0x4d, 0x41, 0x58,
	0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x46, 0x52, 0x4f, 0x4d,
	0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_allprotos_broker_proto_rawDescOnce sync.Once
	file_allprotos_broker_proto_rawDescData = file_allprotos_broker_proto_rawDesc
)

func file_allprotos_broker_proto_rawDescGZIP() []byte {
	file_allprotos_broker_proto_rawDescOnce.Do(func() {
		file_allprotos_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_allprotos_broker_proto_rawDescData)
	})
	return file_allprotos_broker_proto_rawDescData
}

var file_allprotos_broker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_allprotos_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_allprotos_broker_proto_goTypes = []any{
	(OrderResultStatus)(0),      // 0: broker.OrderResultStatus
	(*PairOhlcvs)(nil),          // 1: broker.PairOhlcvs
	(*Ohlcv)(nil),               // 2: broker.Ohlcv
	(*Order)(nil),               // 3: broker.Order
	(*OrderResult)(nil),         // 4: broker.OrderResult
	(*OpenSignal)(nil),          // 5: broker.OpenSignal
	(*CloseSignal)(nil),         // 6: broker.CloseSignal
	(commonpb.Interval)(0),      // 7: common.Interval
	(*timestamp.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_allprotos_broker_proto_depIdxs = []int32{
	2, // 0: broker.PairOhlcvs.ohlcvs:type_name -> broker.Ohlcv
	7, // 1: broker.PairOhlcvs.interval:type_name -> common.Interval
	8, // 2: broker.Ohlcv.open_time:type_name -> google.protobuf.Timestamp
	8, // 3: broker.Ohlcv.close_time:type_name -> google.protobuf.Timestamp
	0, // 4: broker.OrderResult.status:type_name -> broker.OrderResultStatus
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_allprotos_broker_proto_init() }
func file_allprotos_broker_proto_init() {
	if File_allprotos_broker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_allprotos_broker_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PairOhlcvs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_broker_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Ohlcv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_broker_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_broker_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*OrderResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_broker_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*OpenSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_broker_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CloseSignal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_allprotos_broker_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_allprotos_broker_proto_goTypes,
		DependencyIndexes: file_allprotos_broker_proto_depIdxs,
		EnumInfos:         file_allprotos_broker_proto_enumTypes,
		MessageInfos:      file_allprotos_broker_proto_msgTypes,
	}.Build()
	File_allprotos_broker_proto = out.File
	file_allprotos_broker_proto_rawDesc = nil
	file_allprotos_broker_proto_goTypes = nil
	file_allprotos_broker_proto_depIdxs = nil
}
