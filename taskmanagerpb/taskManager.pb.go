// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: allprotos/taskManager.proto

package taskmanagerpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Exchange int32

const (
	Exchange_UNKNOWN_EXCHANGE Exchange = 0
	Exchange_BINANCE          Exchange = 1
)

// Enum value maps for Exchange.
var (
	Exchange_name = map[int32]string{
		0: "UNKNOWN_EXCHANGE",
		1: "BINANCE",
	}
	Exchange_value = map[string]int32{
		"UNKNOWN_EXCHANGE": 0,
		"BINANCE":          1,
	}
)

func (x Exchange) Enum() *Exchange {
	p := new(Exchange)
	*p = x
	return p
}

func (x Exchange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Exchange) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_taskManager_proto_enumTypes[0].Descriptor()
}

func (Exchange) Type() protoreflect.EnumType {
	return &file_allprotos_taskManager_proto_enumTypes[0]
}

func (x Exchange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Exchange.Descriptor instead.
func (Exchange) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_taskManager_proto_rawDescGZIP(), []int{0}
}

type Interval int32

const (
	Interval_UNKNOWN_INTERVAL Interval = 0
	Interval_MINUTES          Interval = 1
	Interval_THREE_MINUTES    Interval = 2
	Interval_FIVE_MINUTES     Interval = 3
	Interval_FIFTEEN_MINUTES  Interval = 4
	Interval_THIRTY_MINUTES   Interval = 5
	Interval_HOUR             Interval = 6
	Interval_TWO_HOURS        Interval = 7
	Interval_FOUR_HOURS       Interval = 8
	Interval_SIX_HOURS        Interval = 9
	Interval_EIGHT_HOURS      Interval = 10
	Interval_TWELVE_HOURS     Interval = 11
	Interval_DAY              Interval = 12
	Interval_THREE_DAYS       Interval = 13
	Interval_WEEK             Interval = 14
	Interval_MONTH            Interval = 15
)

// Enum value maps for Interval.
var (
	Interval_name = map[int32]string{
		0:  "UNKNOWN_INTERVAL",
		1:  "MINUTES",
		2:  "THREE_MINUTES",
		3:  "FIVE_MINUTES",
		4:  "FIFTEEN_MINUTES",
		5:  "THIRTY_MINUTES",
		6:  "HOUR",
		7:  "TWO_HOURS",
		8:  "FOUR_HOURS",
		9:  "SIX_HOURS",
		10: "EIGHT_HOURS",
		11: "TWELVE_HOURS",
		12: "DAY",
		13: "THREE_DAYS",
		14: "WEEK",
		15: "MONTH",
	}
	Interval_value = map[string]int32{
		"UNKNOWN_INTERVAL": 0,
		"MINUTES":          1,
		"THREE_MINUTES":    2,
		"FIVE_MINUTES":     3,
		"FIFTEEN_MINUTES":  4,
		"THIRTY_MINUTES":   5,
		"HOUR":             6,
		"TWO_HOURS":        7,
		"FOUR_HOURS":       8,
		"SIX_HOURS":        9,
		"EIGHT_HOURS":      10,
		"TWELVE_HOURS":     11,
		"DAY":              12,
		"THREE_DAYS":       13,
		"WEEK":             14,
		"MONTH":            15,
	}
)

func (x Interval) Enum() *Interval {
	p := new(Interval)
	*p = x
	return p
}

func (x Interval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interval) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_taskManager_proto_enumTypes[1].Descriptor()
}

func (Interval) Type() protoreflect.EnumType {
	return &file_allprotos_taskManager_proto_enumTypes[1]
}

func (x Interval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interval.Descriptor instead.
func (Interval) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_taskManager_proto_rawDescGZIP(), []int{1}
}

type ScheduleOhlcvsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange Exchange `protobuf:"varint,1,opt,name=exchange,proto3,enum=taskmanager.Exchange" json:"exchange,omitempty"`
	Pair     string   `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	Interval Interval `protobuf:"varint,3,opt,name=interval,proto3,enum=taskmanager.Interval" json:"interval,omitempty"`
}

func (x *ScheduleOhlcvsRequest) Reset() {
	*x = ScheduleOhlcvsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_taskManager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleOhlcvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleOhlcvsRequest) ProtoMessage() {}

func (x *ScheduleOhlcvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_taskManager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleOhlcvsRequest.ProtoReflect.Descriptor instead.
func (*ScheduleOhlcvsRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_taskManager_proto_rawDescGZIP(), []int{0}
}

func (x *ScheduleOhlcvsRequest) GetExchange() Exchange {
	if x != nil {
		return x.Exchange
	}
	return Exchange_UNKNOWN_EXCHANGE
}

func (x *ScheduleOhlcvsRequest) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *ScheduleOhlcvsRequest) GetInterval() Interval {
	if x != nil {
		return x.Interval
	}
	return Interval_UNKNOWN_INTERVAL
}

type ScheduleOhlcvsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScheduleOhlcvsResponse) Reset() {
	*x = ScheduleOhlcvsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_taskManager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduleOhlcvsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleOhlcvsResponse) ProtoMessage() {}

func (x *ScheduleOhlcvsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_taskManager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleOhlcvsResponse.ProtoReflect.Descriptor instead.
func (*ScheduleOhlcvsResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_taskManager_proto_rawDescGZIP(), []int{1}
}

type UnscheduleOhlcvsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exchange Exchange `protobuf:"varint,1,opt,name=exchange,proto3,enum=taskmanager.Exchange" json:"exchange,omitempty"`
	Pair     string   `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	Interval Interval `protobuf:"varint,3,opt,name=interval,proto3,enum=taskmanager.Interval" json:"interval,omitempty"`
}

func (x *UnscheduleOhlcvsRequest) Reset() {
	*x = UnscheduleOhlcvsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_taskManager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnscheduleOhlcvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnscheduleOhlcvsRequest) ProtoMessage() {}

func (x *UnscheduleOhlcvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_taskManager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnscheduleOhlcvsRequest.ProtoReflect.Descriptor instead.
func (*UnscheduleOhlcvsRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_taskManager_proto_rawDescGZIP(), []int{2}
}

func (x *UnscheduleOhlcvsRequest) GetExchange() Exchange {
	if x != nil {
		return x.Exchange
	}
	return Exchange_UNKNOWN_EXCHANGE
}

func (x *UnscheduleOhlcvsRequest) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *UnscheduleOhlcvsRequest) GetInterval() Interval {
	if x != nil {
		return x.Interval
	}
	return Interval_UNKNOWN_INTERVAL
}

type UnscheduleOhlcvsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnscheduleOhlcvsResponse) Reset() {
	*x = UnscheduleOhlcvsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_taskManager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnscheduleOhlcvsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnscheduleOhlcvsResponse) ProtoMessage() {}

func (x *UnscheduleOhlcvsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_taskManager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnscheduleOhlcvsResponse.ProtoReflect.Descriptor instead.
func (*UnscheduleOhlcvsResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_taskManager_proto_rawDescGZIP(), []int{3}
}

var File_allprotos_taskManager_proto protoreflect.FileDescriptor

var file_allprotos_taskManager_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x6c, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x61, 0x73, 0x6b,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74,
	0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x18,
	0x0a, 0x16, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x1a,
	0x0a, 0x18, 0x55, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x68, 0x6c, 0x63,
	0x76, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x2d, 0x0a, 0x08, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x49, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x2a, 0x84, 0x02, 0x0a, 0x08, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x48, 0x52,
	0x45, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x46, 0x49, 0x56, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x46, 0x49, 0x46, 0x54, 0x45, 0x45, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45,
	0x53, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x48, 0x49, 0x52, 0x54, 0x59, 0x5f, 0x4d, 0x49,
	0x4e, 0x55, 0x54, 0x45, 0x53, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x55, 0x52, 0x10,
	0x06, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x57, 0x4f, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10, 0x07,
	0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4f, 0x55, 0x52, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10, 0x08,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49, 0x58, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10, 0x09, 0x12,
	0x0f, 0x0a, 0x0b, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10, 0x0a,
	0x12, 0x10, 0x0a, 0x0c, 0x54, 0x57, 0x45, 0x4c, 0x56, 0x45, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53,
	0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x41, 0x59, 0x10, 0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x54,
	0x48, 0x52, 0x45, 0x45, 0x5f, 0x44, 0x41, 0x59, 0x53, 0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04, 0x57,
	0x45, 0x45, 0x4b, 0x10, 0x0e, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x0f,
	0x32, 0xd0, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x61, 0x73, 0x6b,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4f, 0x68, 0x6c, 0x63, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x55, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x4f, 0x68, 0x6c, 0x63, 0x76, 0x73, 0x12, 0x24, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f,
	0x68, 0x6c, 0x63, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74,
	0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_allprotos_taskManager_proto_rawDescOnce sync.Once
	file_allprotos_taskManager_proto_rawDescData = file_allprotos_taskManager_proto_rawDesc
)

func file_allprotos_taskManager_proto_rawDescGZIP() []byte {
	file_allprotos_taskManager_proto_rawDescOnce.Do(func() {
		file_allprotos_taskManager_proto_rawDescData = protoimpl.X.CompressGZIP(file_allprotos_taskManager_proto_rawDescData)
	})
	return file_allprotos_taskManager_proto_rawDescData
}

var file_allprotos_taskManager_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_allprotos_taskManager_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_allprotos_taskManager_proto_goTypes = []interface{}{
	(Exchange)(0),                    // 0: taskmanager.Exchange
	(Interval)(0),                    // 1: taskmanager.Interval
	(*ScheduleOhlcvsRequest)(nil),    // 2: taskmanager.ScheduleOhlcvsRequest
	(*ScheduleOhlcvsResponse)(nil),   // 3: taskmanager.ScheduleOhlcvsResponse
	(*UnscheduleOhlcvsRequest)(nil),  // 4: taskmanager.UnscheduleOhlcvsRequest
	(*UnscheduleOhlcvsResponse)(nil), // 5: taskmanager.UnscheduleOhlcvsResponse
}
var file_allprotos_taskManager_proto_depIdxs = []int32{
	0, // 0: taskmanager.ScheduleOhlcvsRequest.exchange:type_name -> taskmanager.Exchange
	1, // 1: taskmanager.ScheduleOhlcvsRequest.interval:type_name -> taskmanager.Interval
	0, // 2: taskmanager.UnscheduleOhlcvsRequest.exchange:type_name -> taskmanager.Exchange
	1, // 3: taskmanager.UnscheduleOhlcvsRequest.interval:type_name -> taskmanager.Interval
	2, // 4: taskmanager.TaskManagerService.ScheduleOhlcvs:input_type -> taskmanager.ScheduleOhlcvsRequest
	4, // 5: taskmanager.TaskManagerService.UnscheduleOhlcvs:input_type -> taskmanager.UnscheduleOhlcvsRequest
	3, // 6: taskmanager.TaskManagerService.ScheduleOhlcvs:output_type -> taskmanager.ScheduleOhlcvsResponse
	5, // 7: taskmanager.TaskManagerService.UnscheduleOhlcvs:output_type -> taskmanager.UnscheduleOhlcvsResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_allprotos_taskManager_proto_init() }
func file_allprotos_taskManager_proto_init() {
	if File_allprotos_taskManager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_allprotos_taskManager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleOhlcvsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_taskManager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduleOhlcvsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_taskManager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnscheduleOhlcvsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_taskManager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnscheduleOhlcvsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_allprotos_taskManager_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_allprotos_taskManager_proto_goTypes,
		DependencyIndexes: file_allprotos_taskManager_proto_depIdxs,
		EnumInfos:         file_allprotos_taskManager_proto_enumTypes,
		MessageInfos:      file_allprotos_taskManager_proto_msgTypes,
	}.Build()
	File_allprotos_taskManager_proto = out.File
	file_allprotos_taskManager_proto_rawDesc = nil
	file_allprotos_taskManager_proto_goTypes = nil
	file_allprotos_taskManager_proto_depIdxs = nil
}
