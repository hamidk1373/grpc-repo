// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.12.4
// source: allprotos/signaler.proto

package signalerpb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	commonpb "gitlab.com/shanpanze/grpc-repo/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignalerType int32

const (
	SignalerType_UNKNOWN_SIGNALER_TYPE SignalerType = 0
	SignalerType_TA                    SignalerType = 1
	SignalerType_EXTERNAL              SignalerType = 2
	SignalerType_TELEGRAM              SignalerType = 3
)

// Enum value maps for SignalerType.
var (
	SignalerType_name = map[int32]string{
		0: "UNKNOWN_SIGNALER_TYPE",
		1: "TA",
		2: "EXTERNAL",
		3: "TELEGRAM",
	}
	SignalerType_value = map[string]int32{
		"UNKNOWN_SIGNALER_TYPE": 0,
		"TA":                    1,
		"EXTERNAL":              2,
		"TELEGRAM":              3,
	}
)

func (x SignalerType) Enum() *SignalerType {
	p := new(SignalerType)
	*p = x
	return p
}

func (x SignalerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalerType) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_signaler_proto_enumTypes[0].Descriptor()
}

func (SignalerType) Type() protoreflect.EnumType {
	return &file_allprotos_signaler_proto_enumTypes[0]
}

func (x SignalerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalerType.Descriptor instead.
func (SignalerType) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{0}
}

type SignalSide int32

const (
	SignalSide_UNKNOWN_SIGNAL_SIDE SignalSide = 0
	SignalSide_BUY                 SignalSide = 1
	SignalSide_SELL                SignalSide = 2
)

// Enum value maps for SignalSide.
var (
	SignalSide_name = map[int32]string{
		0: "UNKNOWN_SIGNAL_SIDE",
		1: "BUY",
		2: "SELL",
	}
	SignalSide_value = map[string]int32{
		"UNKNOWN_SIGNAL_SIDE": 0,
		"BUY":                 1,
		"SELL":                2,
	}
)

func (x SignalSide) Enum() *SignalSide {
	p := new(SignalSide)
	*p = x
	return p
}

func (x SignalSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalSide) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_signaler_proto_enumTypes[1].Descriptor()
}

func (SignalSide) Type() protoreflect.EnumType {
	return &file_allprotos_signaler_proto_enumTypes[1]
}

func (x SignalSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalSide.Descriptor instead.
func (SignalSide) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{1}
}

type ExecutionStrategy int32

const (
	ExecutionStrategy_UNKNOWN_EXECUTION_STRATEGY ExecutionStrategy = 0
	ExecutionStrategy_WAIT_FOR_CLOSE_SIGNAL      ExecutionStrategy = 1
	ExecutionStrategy_TP_AND_SL                  ExecutionStrategy = 2
)

// Enum value maps for ExecutionStrategy.
var (
	ExecutionStrategy_name = map[int32]string{
		0: "UNKNOWN_EXECUTION_STRATEGY",
		1: "WAIT_FOR_CLOSE_SIGNAL",
		2: "TP_AND_SL",
	}
	ExecutionStrategy_value = map[string]int32{
		"UNKNOWN_EXECUTION_STRATEGY": 0,
		"WAIT_FOR_CLOSE_SIGNAL":      1,
		"TP_AND_SL":                  2,
	}
)

func (x ExecutionStrategy) Enum() *ExecutionStrategy {
	p := new(ExecutionStrategy)
	*p = x
	return p
}

func (x ExecutionStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_signaler_proto_enumTypes[2].Descriptor()
}

func (ExecutionStrategy) Type() protoreflect.EnumType {
	return &file_allprotos_signaler_proto_enumTypes[2]
}

func (x ExecutionStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionStrategy.Descriptor instead.
func (ExecutionStrategy) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{2}
}

type SignalType int32

const (
	SignalType_UNKNOWN_SIGNAL_TYPE SignalType = 0
	SignalType_LONG                SignalType = 1
	SignalType_SHORT               SignalType = 2
)

// Enum value maps for SignalType.
var (
	SignalType_name = map[int32]string{
		0: "UNKNOWN_SIGNAL_TYPE",
		1: "LONG",
		2: "SHORT",
	}
	SignalType_value = map[string]int32{
		"UNKNOWN_SIGNAL_TYPE": 0,
		"LONG":                1,
		"SHORT":               2,
	}
)

func (x SignalType) Enum() *SignalType {
	p := new(SignalType)
	*p = x
	return p
}

func (x SignalType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalType) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_signaler_proto_enumTypes[3].Descriptor()
}

func (SignalType) Type() protoreflect.EnumType {
	return &file_allprotos_signaler_proto_enumTypes[3]
}

func (x SignalType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalType.Descriptor instead.
func (SignalType) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{3}
}

type SignalStatus int32

const (
	SignalStatus_UNKNOWN_SIGNAL_STATUS SignalStatus = 0
	SignalStatus_PENDING_SIGNAL_STATUS SignalStatus = 1
	SignalStatus_OPEN_SIGNAL_STATUS    SignalStatus = 2
	SignalStatus_CLOSE_SIGNAL_STATUS   SignalStatus = 3
)

// Enum value maps for SignalStatus.
var (
	SignalStatus_name = map[int32]string{
		0: "UNKNOWN_SIGNAL_STATUS",
		1: "PENDING_SIGNAL_STATUS",
		2: "OPEN_SIGNAL_STATUS",
		3: "CLOSE_SIGNAL_STATUS",
	}
	SignalStatus_value = map[string]int32{
		"UNKNOWN_SIGNAL_STATUS": 0,
		"PENDING_SIGNAL_STATUS": 1,
		"OPEN_SIGNAL_STATUS":    2,
		"CLOSE_SIGNAL_STATUS":   3,
	}
)

func (x SignalStatus) Enum() *SignalStatus {
	p := new(SignalStatus)
	*p = x
	return p
}

func (x SignalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_signaler_proto_enumTypes[4].Descriptor()
}

func (SignalStatus) Type() protoreflect.EnumType {
	return &file_allprotos_signaler_proto_enumTypes[4]
}

func (x SignalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalStatus.Descriptor instead.
func (SignalStatus) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{4}
}

type PaginationDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *PaginationDataRequest) Reset() {
	*x = PaginationDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationDataRequest) ProtoMessage() {}

func (x *PaginationDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationDataRequest.ProtoReflect.Descriptor instead.
func (*PaginationDataRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationDataRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationDataRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PaginationDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousPageToken    uint32 `protobuf:"varint,1,opt,name=previous_page_token,json=previousPageToken,proto3" json:"previous_page_token,omitempty"`
	NextPageToken        string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalNumberOfRecords uint64 `protobuf:"varint,3,opt,name=total_number_of_records,json=totalNumberOfRecords,proto3" json:"total_number_of_records,omitempty"`
}

func (x *PaginationDataResponse) Reset() {
	*x = PaginationDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationDataResponse) ProtoMessage() {}

func (x *PaginationDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationDataResponse.ProtoReflect.Descriptor instead.
func (*PaginationDataResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{1}
}

func (x *PaginationDataResponse) GetPreviousPageToken() uint32 {
	if x != nil {
		return x.PreviousPageToken
	}
	return 0
}

func (x *PaginationDataResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *PaginationDataResponse) GetTotalNumberOfRecords() uint64 {
	if x != nil {
		return x.TotalNumberOfRecords
	}
	return 0
}

type TASignaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strategy         commonpb.Strategy           `protobuf:"varint,1,opt,name=strategy,proto3,enum=common.Strategy" json:"strategy,omitempty"`
	Interval         commonpb.Interval           `protobuf:"varint,2,opt,name=interval,proto3,enum=common.Interval" json:"interval,omitempty"`
	IndicatorConfigs []*commonpb.IndicatorConfig `protobuf:"bytes,3,rep,name=indicator_configs,json=indicatorConfigs,proto3" json:"indicator_configs,omitempty"`
}

func (x *TASignaler) Reset() {
	*x = TASignaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TASignaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TASignaler) ProtoMessage() {}

func (x *TASignaler) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TASignaler.ProtoReflect.Descriptor instead.
func (*TASignaler) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{2}
}

func (x *TASignaler) GetStrategy() commonpb.Strategy {
	if x != nil {
		return x.Strategy
	}
	return commonpb.Strategy(0)
}

func (x *TASignaler) GetInterval() commonpb.Interval {
	if x != nil {
		return x.Interval
	}
	return commonpb.Interval(0)
}

func (x *TASignaler) GetIndicatorConfigs() []*commonpb.IndicatorConfig {
	if x != nil {
		return x.IndicatorConfigs
	}
	return nil
}

type TelegSignaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId int64 `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *TelegSignaler) Reset() {
	*x = TelegSignaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegSignaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegSignaler) ProtoMessage() {}

func (x *TelegSignaler) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegSignaler.ProtoReflect.Descriptor instead.
func (*TelegSignaler) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{3}
}

func (x *TelegSignaler) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

type ExternalSignaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExternalSignaler) Reset() {
	*x = ExternalSignaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalSignaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalSignaler) ProtoMessage() {}

func (x *ExternalSignaler) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalSignaler.ProtoReflect.Descriptor instead.
func (*ExternalSignaler) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{4}
}

type GenericSignaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatorId                uint32               `protobuf:"varint,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Name                     string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl                 string               `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	MarketId                 uint32               `protobuf:"varint,5,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	BaseCurrency             string               `protobuf:"bytes,6,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	Description              string               `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Type                     SignalerType         `protobuf:"varint,8,opt,name=type,proto3,enum=signaler.SignalerType" json:"type,omitempty"` // 1)internal ta strategy based 2) manual by experts 3) API 4) programmatic (crawl, sentiment) 5) aggregator bot!
	Pairs                    []string             `protobuf:"bytes,9,rep,name=pairs,proto3" json:"pairs,omitempty"`
	DefaultOrderType         string               `protobuf:"bytes,10,opt,name=default_order_type,json=defaultOrderType,proto3" json:"default_order_type,omitempty"` // currently unused
	DefaultExecutionStrategy ExecutionStrategy    `protobuf:"varint,11,opt,name=default_execution_strategy,json=defaultExecutionStrategy,proto3,enum=signaler.ExecutionStrategy" json:"default_execution_strategy,omitempty"`
	ActivationStatus         bool                 `protobuf:"varint,12,opt,name=activation_status,json=activationStatus,proto3" json:"activation_status,omitempty"`
	MoneyManagementStrategy  string               `protobuf:"bytes,13,opt,name=money_management_strategy,json=moneyManagementStrategy,proto3" json:"money_management_strategy,omitempty"`
	CreatorPerformanceFee    float64              `protobuf:"fixed64,14,opt,name=creator_performance_fee,json=creatorPerformanceFee,proto3" json:"creator_performance_fee,omitempty"`
	SystemPerformanceFee     float64              `protobuf:"fixed64,15,opt,name=system_performance_fee,json=systemPerformanceFee,proto3" json:"system_performance_fee,omitempty"`
	CreatorSubscriptionFee   float64              `protobuf:"fixed64,16,opt,name=creator_subscription_fee,json=creatorSubscriptionFee,proto3" json:"creator_subscription_fee,omitempty"`
	SystemSubscriptionFee    float64              `protobuf:"fixed64,17,opt,name=system_subscription_fee,json=systemSubscriptionFee,proto3" json:"system_subscription_fee,omitempty"`
	MinPricePercentage       float64              `protobuf:"fixed64,18,opt,name=min_price_percentage,json=minPricePercentage,proto3" json:"min_price_percentage,omitempty"`
	MaxPricePercentage       float64              `protobuf:"fixed64,19,opt,name=max_price_percentage,json=maxPricePercentage,proto3" json:"max_price_percentage,omitempty"`
	StopLossPercentage       float64              `protobuf:"fixed64,20,opt,name=stop_loss_percentage,json=stopLossPercentage,proto3" json:"stop_loss_percentage,omitempty"`
	TakeProfitsPercentages   []float64            `protobuf:"fixed64,21,rep,packed,name=take_profits_percentages,json=takeProfitsPercentages,proto3" json:"take_profits_percentages,omitempty"`
	CreatedAt                *timestamp.Timestamp `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	WinRate                  float64              `protobuf:"fixed64,23,opt,name=win_rate,json=winRate,proto3" json:"win_rate,omitempty"`
	PNL                      float64              `protobuf:"fixed64,24,opt,name=p_n_l,json=pNL,proto3" json:"p_n_l,omitempty"`
	PortfolioMaxNumber       uint32               `protobuf:"varint,25,opt,name=portfolio_max_number,json=portfolioMaxNumber,proto3" json:"portfolio_max_number,omitempty"`
	NumberOfPortfolios       uint32               `protobuf:"varint,26,opt,name=number_of_portfolios,json=numberOfPortfolios,proto3" json:"number_of_portfolios,omitempty"`
	Price                    float64              `protobuf:"fixed64,27,opt,name=price,proto3" json:"price,omitempty"`
	PriceUnit                string               `protobuf:"bytes,28,opt,name=price_unit,json=priceUnit,proto3" json:"price_unit,omitempty"`
	SuitableFor              string               `protobuf:"bytes,29,opt,name=suitable_for,json=suitableFor,proto3" json:"suitable_for,omitempty"`
	CreatorName              string               `protobuf:"bytes,30,opt,name=creator_name,json=creatorName,proto3" json:"creator_name,omitempty"`
	AssetsUnderManagement    float64              `protobuf:"fixed64,31,opt,name=assets_under_management,json=assetsUnderManagement,proto3" json:"assets_under_management,omitempty"`
	CreatorPublicId          string               `protobuf:"bytes,32,opt,name=creator_public_id,json=creatorPublicId,proto3" json:"creator_public_id,omitempty"`
	Published                bool                 `protobuf:"varint,33,opt,name=published,proto3" json:"published,omitempty"`
}

func (x *GenericSignaler) Reset() {
	*x = GenericSignaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericSignaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericSignaler) ProtoMessage() {}

func (x *GenericSignaler) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericSignaler.ProtoReflect.Descriptor instead.
func (*GenericSignaler) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{5}
}

func (x *GenericSignaler) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GenericSignaler) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *GenericSignaler) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenericSignaler) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GenericSignaler) GetMarketId() uint32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

func (x *GenericSignaler) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *GenericSignaler) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GenericSignaler) GetType() SignalerType {
	if x != nil {
		return x.Type
	}
	return SignalerType_UNKNOWN_SIGNALER_TYPE
}

func (x *GenericSignaler) GetPairs() []string {
	if x != nil {
		return x.Pairs
	}
	return nil
}

func (x *GenericSignaler) GetDefaultOrderType() string {
	if x != nil {
		return x.DefaultOrderType
	}
	return ""
}

func (x *GenericSignaler) GetDefaultExecutionStrategy() ExecutionStrategy {
	if x != nil {
		return x.DefaultExecutionStrategy
	}
	return ExecutionStrategy_UNKNOWN_EXECUTION_STRATEGY
}

func (x *GenericSignaler) GetActivationStatus() bool {
	if x != nil {
		return x.ActivationStatus
	}
	return false
}

func (x *GenericSignaler) GetMoneyManagementStrategy() string {
	if x != nil {
		return x.MoneyManagementStrategy
	}
	return ""
}

func (x *GenericSignaler) GetCreatorPerformanceFee() float64 {
	if x != nil {
		return x.CreatorPerformanceFee
	}
	return 0
}

func (x *GenericSignaler) GetSystemPerformanceFee() float64 {
	if x != nil {
		return x.SystemPerformanceFee
	}
	return 0
}

func (x *GenericSignaler) GetCreatorSubscriptionFee() float64 {
	if x != nil {
		return x.CreatorSubscriptionFee
	}
	return 0
}

func (x *GenericSignaler) GetSystemSubscriptionFee() float64 {
	if x != nil {
		return x.SystemSubscriptionFee
	}
	return 0
}

func (x *GenericSignaler) GetMinPricePercentage() float64 {
	if x != nil {
		return x.MinPricePercentage
	}
	return 0
}

func (x *GenericSignaler) GetMaxPricePercentage() float64 {
	if x != nil {
		return x.MaxPricePercentage
	}
	return 0
}

func (x *GenericSignaler) GetStopLossPercentage() float64 {
	if x != nil {
		return x.StopLossPercentage
	}
	return 0
}

func (x *GenericSignaler) GetTakeProfitsPercentages() []float64 {
	if x != nil {
		return x.TakeProfitsPercentages
	}
	return nil
}

func (x *GenericSignaler) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GenericSignaler) GetWinRate() float64 {
	if x != nil {
		return x.WinRate
	}
	return 0
}

func (x *GenericSignaler) GetPNL() float64 {
	if x != nil {
		return x.PNL
	}
	return 0
}

func (x *GenericSignaler) GetPortfolioMaxNumber() uint32 {
	if x != nil {
		return x.PortfolioMaxNumber
	}
	return 0
}

func (x *GenericSignaler) GetNumberOfPortfolios() uint32 {
	if x != nil {
		return x.NumberOfPortfolios
	}
	return 0
}

func (x *GenericSignaler) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GenericSignaler) GetPriceUnit() string {
	if x != nil {
		return x.PriceUnit
	}
	return ""
}

func (x *GenericSignaler) GetSuitableFor() string {
	if x != nil {
		return x.SuitableFor
	}
	return ""
}

func (x *GenericSignaler) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *GenericSignaler) GetAssetsUnderManagement() float64 {
	if x != nil {
		return x.AssetsUnderManagement
	}
	return 0
}

func (x *GenericSignaler) GetCreatorPublicId() string {
	if x != nil {
		return x.CreatorPublicId
	}
	return ""
}

func (x *GenericSignaler) GetPublished() bool {
	if x != nil {
		return x.Published
	}
	return false
}

type Signaler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonAttributes *GenericSignaler `protobuf:"bytes,1,opt,name=common_attributes,json=commonAttributes,proto3" json:"common_attributes,omitempty"`
	// Types that are assignable to TypeAttributes:
	//
	//	*Signaler_TaSignaler
	//	*Signaler_ExternalSignaler
	//	*Signaler_TelegSignaler
	TypeAttributes isSignaler_TypeAttributes `protobuf_oneof:"type_attributes"`
}

func (x *Signaler) Reset() {
	*x = Signaler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signaler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signaler) ProtoMessage() {}

func (x *Signaler) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signaler.ProtoReflect.Descriptor instead.
func (*Signaler) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{6}
}

func (x *Signaler) GetCommonAttributes() *GenericSignaler {
	if x != nil {
		return x.CommonAttributes
	}
	return nil
}

func (m *Signaler) GetTypeAttributes() isSignaler_TypeAttributes {
	if m != nil {
		return m.TypeAttributes
	}
	return nil
}

func (x *Signaler) GetTaSignaler() *TASignaler {
	if x, ok := x.GetTypeAttributes().(*Signaler_TaSignaler); ok {
		return x.TaSignaler
	}
	return nil
}

func (x *Signaler) GetExternalSignaler() *ExternalSignaler {
	if x, ok := x.GetTypeAttributes().(*Signaler_ExternalSignaler); ok {
		return x.ExternalSignaler
	}
	return nil
}

func (x *Signaler) GetTelegSignaler() *TelegSignaler {
	if x, ok := x.GetTypeAttributes().(*Signaler_TelegSignaler); ok {
		return x.TelegSignaler
	}
	return nil
}

type isSignaler_TypeAttributes interface {
	isSignaler_TypeAttributes()
}

type Signaler_TaSignaler struct {
	TaSignaler *TASignaler `protobuf:"bytes,2,opt,name=ta_signaler,json=taSignaler,proto3,oneof"`
}

type Signaler_ExternalSignaler struct {
	ExternalSignaler *ExternalSignaler `protobuf:"bytes,3,opt,name=external_signaler,json=externalSignaler,proto3,oneof"`
}

type Signaler_TelegSignaler struct {
	TelegSignaler *TelegSignaler `protobuf:"bytes,4,opt,name=teleg_signaler,json=telegSignaler,proto3,oneof"`
}

func (*Signaler_TaSignaler) isSignaler_TypeAttributes() {}

func (*Signaler_ExternalSignaler) isSignaler_TypeAttributes() {}

func (*Signaler_TelegSignaler) isSignaler_TypeAttributes() {}

type Signal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SignalerId        uint32               `protobuf:"varint,2,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	Pair              string               `protobuf:"bytes,3,opt,name=pair,proto3" json:"pair,omitempty"`
	SignalDate        *timestamp.Timestamp `protobuf:"bytes,4,opt,name=signal_date,json=signalDate,proto3" json:"signal_date,omitempty"`
	TrackId           string               `protobuf:"bytes,5,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	MinPrice          float64              `protobuf:"fixed64,6,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice          float64              `protobuf:"fixed64,7,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	StopLoss          float64              `protobuf:"fixed64,8,opt,name=stop_loss,json=stopLoss,proto3" json:"stop_loss,omitempty"`
	TakeProfits       []float64            `protobuf:"fixed64,9,rep,packed,name=take_profits,json=takeProfits,proto3" json:"take_profits,omitempty"`
	OrderType         string               `protobuf:"bytes,10,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"` //to be used for market order
	ExecutionStrategy ExecutionStrategy    `protobuf:"varint,11,opt,name=execution_strategy,json=executionStrategy,proto3,enum=signaler.ExecutionStrategy" json:"execution_strategy,omitempty"`
	Strength          float64              `protobuf:"fixed64,12,opt,name=strength,proto3" json:"strength,omitempty"`
	Type              SignalType           `protobuf:"varint,13,opt,name=type,proto3,enum=signaler.SignalType" json:"type,omitempty"`
	Valid             bool                 `protobuf:"varint,14,opt,name=valid,proto3" json:"valid,omitempty"` // signals can be invalidated using InvalidateSignal()
	OpenDate          *timestamp.Timestamp `protobuf:"bytes,15,opt,name=open_date,json=openDate,proto3" json:"open_date,omitempty"`
	CloseDate         *timestamp.Timestamp `protobuf:"bytes,16,opt,name=close_date,json=closeDate,proto3" json:"close_date,omitempty"`
	OpenPrice         float64              `protobuf:"fixed64,17,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`
	ClosePrice        float64              `protobuf:"fixed64,18,opt,name=close_price,json=closePrice,proto3" json:"close_price,omitempty"`
	PNL               float64              `protobuf:"fixed64,19,opt,name=p_n_l,json=pNL,proto3" json:"p_n_l,omitempty"`
	CurrentPrice      float64              `protobuf:"fixed64,20,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"` // this value is being used to calculate pnl for open signals
	Status            SignalStatus         `protobuf:"varint,21,opt,name=status,proto3,enum=signaler.SignalStatus" json:"status,omitempty"`
	Leverage          uint32               `protobuf:"varint,22,opt,name=leverage,proto3" json:"leverage,omitempty"`
}

func (x *Signal) Reset() {
	*x = Signal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{7}
}

func (x *Signal) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Signal) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *Signal) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *Signal) GetSignalDate() *timestamp.Timestamp {
	if x != nil {
		return x.SignalDate
	}
	return nil
}

func (x *Signal) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

func (x *Signal) GetMinPrice() float64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *Signal) GetMaxPrice() float64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *Signal) GetStopLoss() float64 {
	if x != nil {
		return x.StopLoss
	}
	return 0
}

func (x *Signal) GetTakeProfits() []float64 {
	if x != nil {
		return x.TakeProfits
	}
	return nil
}

func (x *Signal) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *Signal) GetExecutionStrategy() ExecutionStrategy {
	if x != nil {
		return x.ExecutionStrategy
	}
	return ExecutionStrategy_UNKNOWN_EXECUTION_STRATEGY
}

func (x *Signal) GetStrength() float64 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *Signal) GetType() SignalType {
	if x != nil {
		return x.Type
	}
	return SignalType_UNKNOWN_SIGNAL_TYPE
}

func (x *Signal) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *Signal) GetOpenDate() *timestamp.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *Signal) GetCloseDate() *timestamp.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

func (x *Signal) GetOpenPrice() float64 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *Signal) GetClosePrice() float64 {
	if x != nil {
		return x.ClosePrice
	}
	return 0
}

func (x *Signal) GetPNL() float64 {
	if x != nil {
		return x.PNL
	}
	return 0
}

func (x *Signal) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *Signal) GetStatus() SignalStatus {
	if x != nil {
		return x.Status
	}
	return SignalStatus_UNKNOWN_SIGNAL_STATUS
}

func (x *Signal) GetLeverage() uint32 {
	if x != nil {
		return x.Leverage
	}
	return 0
}

type PublishSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalerId        uint32            `protobuf:"varint,1,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	Pair              string            `protobuf:"bytes,2,opt,name=pair,proto3" json:"pair,omitempty"`
	ExecutionStrategy ExecutionStrategy `protobuf:"varint,3,opt,name=execution_strategy,json=executionStrategy,proto3,enum=signaler.ExecutionStrategy" json:"execution_strategy,omitempty"`
	Side              SignalSide        `protobuf:"varint,4,opt,name=side,proto3,enum=signaler.SignalSide" json:"side,omitempty"`
	MinPrice          float64           `protobuf:"fixed64,5,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice          float64           `protobuf:"fixed64,6,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	StopLoss          float64           `protobuf:"fixed64,7,opt,name=stop_loss,json=stopLoss,proto3" json:"stop_loss,omitempty"`
	TakeProfits       []float64         `protobuf:"fixed64,8,rep,packed,name=take_profits,json=takeProfits,proto3" json:"take_profits,omitempty"`
}

func (x *PublishSignalRequest) Reset() {
	*x = PublishSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishSignalRequest) ProtoMessage() {}

func (x *PublishSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishSignalRequest.ProtoReflect.Descriptor instead.
func (*PublishSignalRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{8}
}

func (x *PublishSignalRequest) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *PublishSignalRequest) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *PublishSignalRequest) GetExecutionStrategy() ExecutionStrategy {
	if x != nil {
		return x.ExecutionStrategy
	}
	return ExecutionStrategy_UNKNOWN_EXECUTION_STRATEGY
}

func (x *PublishSignalRequest) GetSide() SignalSide {
	if x != nil {
		return x.Side
	}
	return SignalSide_UNKNOWN_SIGNAL_SIDE
}

func (x *PublishSignalRequest) GetMinPrice() float64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *PublishSignalRequest) GetMaxPrice() float64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *PublishSignalRequest) GetStopLoss() float64 {
	if x != nil {
		return x.StopLoss
	}
	return 0
}

func (x *PublishSignalRequest) GetTakeProfits() []float64 {
	if x != nil {
		return x.TakeProfits
	}
	return nil
}

type PublishSignalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishSignalResponse) Reset() {
	*x = PublishSignalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishSignalResponse) ProtoMessage() {}

func (x *PublishSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishSignalResponse.ProtoReflect.Descriptor instead.
func (*PublishSignalResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{9}
}

type InvalidateSignalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalId uint32 `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
}

func (x *InvalidateSignalRequest) Reset() {
	*x = InvalidateSignalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidateSignalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateSignalRequest) ProtoMessage() {}

func (x *InvalidateSignalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateSignalRequest.ProtoReflect.Descriptor instead.
func (*InvalidateSignalRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{10}
}

func (x *InvalidateSignalRequest) GetSignalId() uint32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

type InvalidateSignalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InvalidateSignalResponse) Reset() {
	*x = InvalidateSignalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidateSignalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateSignalResponse) ProtoMessage() {}

func (x *InvalidateSignalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateSignalResponse.ProtoReflect.Descriptor instead.
func (*InvalidateSignalResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{11}
}

type CreateSignalerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signaler *Signaler `protobuf:"bytes,1,opt,name=signaler,proto3" json:"signaler,omitempty"`
}

func (x *CreateSignalerRequest) Reset() {
	*x = CreateSignalerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignalerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignalerRequest) ProtoMessage() {}

func (x *CreateSignalerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignalerRequest.ProtoReflect.Descriptor instead.
func (*CreateSignalerRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{12}
}

func (x *CreateSignalerRequest) GetSignaler() *Signaler {
	if x != nil {
		return x.Signaler
	}
	return nil
}

type CreateSignalerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateSignalerResponse) Reset() {
	*x = CreateSignalerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignalerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignalerResponse) ProtoMessage() {}

func (x *CreateSignalerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignalerResponse.ProtoReflect.Descriptor instead.
func (*CreateSignalerResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{13}
}

func (x *CreateSignalerResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{14}
}

func (x *Meta) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Meta) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Meta) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SignalersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorId          uint32                 `protobuf:"varint,1,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	MarketId           uint32                 `protobuf:"varint,2,opt,name=market_id,json=marketId,proto3" json:"market_id,omitempty"`
	BaseCurrency       string                 `protobuf:"bytes,3,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	Type               SignalerType           `protobuf:"varint,4,opt,name=type,proto3,enum=signaler.SignalerType" json:"type,omitempty"`
	Pairs              []string               `protobuf:"bytes,5,rep,name=pairs,proto3" json:"pairs,omitempty"`
	ActivationStatus   bool                   `protobuf:"varint,6,opt,name=activation_status,json=activationStatus,proto3" json:"activation_status,omitempty"`
	Name               string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	PaginationData     *PaginationDataRequest `protobuf:"bytes,8,opt,name=pagination_data,json=paginationData,proto3" json:"pagination_data,omitempty"`
	IncludePortfolio   bool                   `protobuf:"varint,9,opt,name=include_portfolio,json=includePortfolio,proto3" json:"include_portfolio,omitempty"`
	SuitableFor        string                 `protobuf:"bytes,10,opt,name=suitable_for,json=suitableFor,proto3" json:"suitable_for,omitempty"`
	SubscriptionStatus string                 `protobuf:"bytes,11,opt,name=subscription_status,json=subscriptionStatus,proto3" json:"subscription_status,omitempty"`
	UserId             uint32                 `protobuf:"varint,12,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Published          bool                   `protobuf:"varint,13,opt,name=published,proto3" json:"published,omitempty"`
}

func (x *SignalersRequest) Reset() {
	*x = SignalersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalersRequest) ProtoMessage() {}

func (x *SignalersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalersRequest.ProtoReflect.Descriptor instead.
func (*SignalersRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{15}
}

func (x *SignalersRequest) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *SignalersRequest) GetMarketId() uint32 {
	if x != nil {
		return x.MarketId
	}
	return 0
}

func (x *SignalersRequest) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *SignalersRequest) GetType() SignalerType {
	if x != nil {
		return x.Type
	}
	return SignalerType_UNKNOWN_SIGNALER_TYPE
}

func (x *SignalersRequest) GetPairs() []string {
	if x != nil {
		return x.Pairs
	}
	return nil
}

func (x *SignalersRequest) GetActivationStatus() bool {
	if x != nil {
		return x.ActivationStatus
	}
	return false
}

func (x *SignalersRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SignalersRequest) GetPaginationData() *PaginationDataRequest {
	if x != nil {
		return x.PaginationData
	}
	return nil
}

func (x *SignalersRequest) GetIncludePortfolio() bool {
	if x != nil {
		return x.IncludePortfolio
	}
	return false
}

func (x *SignalersRequest) GetSuitableFor() string {
	if x != nil {
		return x.SuitableFor
	}
	return ""
}

func (x *SignalersRequest) GetSubscriptionStatus() string {
	if x != nil {
		return x.SubscriptionStatus
	}
	return ""
}

func (x *SignalersRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SignalersRequest) GetPublished() bool {
	if x != nil {
		return x.Published
	}
	return false
}

type SignalersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signalers []*Signaler `protobuf:"bytes,1,rep,name=signalers,proto3" json:"signalers,omitempty"`
	Meta      *Meta       `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *SignalersResponse) Reset() {
	*x = SignalersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalersResponse) ProtoMessage() {}

func (x *SignalersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalersResponse.ProtoReflect.Descriptor instead.
func (*SignalersResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{16}
}

func (x *SignalersResponse) GetSignalers() []*Signaler {
	if x != nil {
		return x.Signalers
	}
	return nil
}

func (x *SignalersResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type SignalerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SignalerRequest) Reset() {
	*x = SignalerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalerRequest) ProtoMessage() {}

func (x *SignalerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalerRequest.ProtoReflect.Descriptor instead.
func (*SignalerRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{17}
}

func (x *SignalerRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SignalerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signaler *Signaler `protobuf:"bytes,1,opt,name=signaler,proto3" json:"signaler,omitempty"`
}

func (x *SignalerResponse) Reset() {
	*x = SignalerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalerResponse) ProtoMessage() {}

func (x *SignalerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalerResponse.ProtoReflect.Descriptor instead.
func (*SignalerResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{18}
}

func (x *SignalerResponse) GetSignaler() *Signaler {
	if x != nil {
		return x.Signaler
	}
	return nil
}

type ActivateSignalerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalerId uint32 `protobuf:"varint,1,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
}

func (x *ActivateSignalerRequest) Reset() {
	*x = ActivateSignalerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateSignalerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateSignalerRequest) ProtoMessage() {}

func (x *ActivateSignalerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateSignalerRequest.ProtoReflect.Descriptor instead.
func (*ActivateSignalerRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{19}
}

func (x *ActivateSignalerRequest) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

type ActivateSignalerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivateSignalerResponse) Reset() {
	*x = ActivateSignalerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateSignalerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateSignalerResponse) ProtoMessage() {}

func (x *ActivateSignalerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateSignalerResponse.ProtoReflect.Descriptor instead.
func (*ActivateSignalerResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{20}
}

type DeactivateSignalerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalerId uint32 `protobuf:"varint,1,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
}

func (x *DeactivateSignalerRequest) Reset() {
	*x = DeactivateSignalerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateSignalerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateSignalerRequest) ProtoMessage() {}

func (x *DeactivateSignalerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateSignalerRequest.ProtoReflect.Descriptor instead.
func (*DeactivateSignalerRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{21}
}

func (x *DeactivateSignalerRequest) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

type DeactivateSignalerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeactivateSignalerResponse) Reset() {
	*x = DeactivateSignalerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateSignalerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateSignalerResponse) ProtoMessage() {}

func (x *DeactivateSignalerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateSignalerResponse.ProtoReflect.Descriptor instead.
func (*DeactivateSignalerResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{22}
}

type UpdateSignalerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl                 string   `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Description              string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Pairs                    []string `protobuf:"bytes,5,rep,name=pairs,proto3" json:"pairs,omitempty"`
	DefaultOrderType         string   `protobuf:"bytes,6,opt,name=default_order_type,json=defaultOrderType,proto3" json:"default_order_type,omitempty"` // currently unused
	DefaultExecutionStrategy string   `protobuf:"bytes,7,opt,name=default_execution_strategy,json=defaultExecutionStrategy,proto3" json:"default_execution_strategy,omitempty"`
	ActivationStatus         bool     `protobuf:"varint,8,opt,name=activation_status,json=activationStatus,proto3" json:"activation_status,omitempty"`
	CreatorPerformanceFee    float64  `protobuf:"fixed64,9,opt,name=creator_performance_fee,json=creatorPerformanceFee,proto3" json:"creator_performance_fee,omitempty"`
	SystemPerformanceFee     float64  `protobuf:"fixed64,10,opt,name=system_performance_fee,json=systemPerformanceFee,proto3" json:"system_performance_fee,omitempty"`
	CreatorSubscriptionFee   float64  `protobuf:"fixed64,11,opt,name=creator_subscription_fee,json=creatorSubscriptionFee,proto3" json:"creator_subscription_fee,omitempty"`
	SystemSubscriptionFee    float64  `protobuf:"fixed64,12,opt,name=system_subscription_fee,json=systemSubscriptionFee,proto3" json:"system_subscription_fee,omitempty"`
}

func (x *UpdateSignalerRequest) Reset() {
	*x = UpdateSignalerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSignalerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSignalerRequest) ProtoMessage() {}

func (x *UpdateSignalerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSignalerRequest.ProtoReflect.Descriptor instead.
func (*UpdateSignalerRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateSignalerRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSignalerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSignalerRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *UpdateSignalerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSignalerRequest) GetPairs() []string {
	if x != nil {
		return x.Pairs
	}
	return nil
}

func (x *UpdateSignalerRequest) GetDefaultOrderType() string {
	if x != nil {
		return x.DefaultOrderType
	}
	return ""
}

func (x *UpdateSignalerRequest) GetDefaultExecutionStrategy() string {
	if x != nil {
		return x.DefaultExecutionStrategy
	}
	return ""
}

func (x *UpdateSignalerRequest) GetActivationStatus() bool {
	if x != nil {
		return x.ActivationStatus
	}
	return false
}

func (x *UpdateSignalerRequest) GetCreatorPerformanceFee() float64 {
	if x != nil {
		return x.CreatorPerformanceFee
	}
	return 0
}

func (x *UpdateSignalerRequest) GetSystemPerformanceFee() float64 {
	if x != nil {
		return x.SystemPerformanceFee
	}
	return 0
}

func (x *UpdateSignalerRequest) GetCreatorSubscriptionFee() float64 {
	if x != nil {
		return x.CreatorSubscriptionFee
	}
	return 0
}

func (x *UpdateSignalerRequest) GetSystemSubscriptionFee() float64 {
	if x != nil {
		return x.SystemSubscriptionFee
	}
	return 0
}

type UpdateSignalerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSignalerResponse) Reset() {
	*x = UpdateSignalerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSignalerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSignalerResponse) ProtoMessage() {}

func (x *UpdateSignalerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSignalerResponse.ProtoReflect.Descriptor instead.
func (*UpdateSignalerResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{24}
}

type SignalerSignalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalerId uint32 `protobuf:"varint,1,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
}

func (x *SignalerSignalsRequest) Reset() {
	*x = SignalerSignalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalerSignalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalerSignalsRequest) ProtoMessage() {}

func (x *SignalerSignalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalerSignalsRequest.ProtoReflect.Descriptor instead.
func (*SignalerSignalsRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{25}
}

func (x *SignalerSignalsRequest) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

type SignalerSignalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signals []*Signal `protobuf:"bytes,1,rep,name=signals,proto3" json:"signals,omitempty"`
}

func (x *SignalerSignalsResponse) Reset() {
	*x = SignalerSignalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalerSignalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalerSignalsResponse) ProtoMessage() {}

func (x *SignalerSignalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalerSignalsResponse.ProtoReflect.Descriptor instead.
func (*SignalerSignalsResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{26}
}

func (x *SignalerSignalsResponse) GetSignals() []*Signal {
	if x != nil {
		return x.Signals
	}
	return nil
}

type CreateTelegramSignalPublisherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalerId uint32 `protobuf:"varint,1,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	ChannelId  int64  `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	BotToken   string `protobuf:"bytes,3,opt,name=bot_token,json=botToken,proto3" json:"bot_token,omitempty"`
}

func (x *CreateTelegramSignalPublisherRequest) Reset() {
	*x = CreateTelegramSignalPublisherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTelegramSignalPublisherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTelegramSignalPublisherRequest) ProtoMessage() {}

func (x *CreateTelegramSignalPublisherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTelegramSignalPublisherRequest.ProtoReflect.Descriptor instead.
func (*CreateTelegramSignalPublisherRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{27}
}

func (x *CreateTelegramSignalPublisherRequest) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *CreateTelegramSignalPublisherRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *CreateTelegramSignalPublisherRequest) GetBotToken() string {
	if x != nil {
		return x.BotToken
	}
	return ""
}

type CreateTelegramSignalPublisherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateTelegramSignalPublisherResponse) Reset() {
	*x = CreateTelegramSignalPublisherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTelegramSignalPublisherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTelegramSignalPublisherResponse) ProtoMessage() {}

func (x *CreateTelegramSignalPublisherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTelegramSignalPublisherResponse.ProtoReflect.Descriptor instead.
func (*CreateTelegramSignalPublisherResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{28}
}

func (x *CreateTelegramSignalPublisherResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TelegramSignalPublisher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SignalerId   uint32 `protobuf:"varint,2,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	ChannelId    int64  `protobuf:"varint,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	BotToken     string `protobuf:"bytes,4,opt,name=bot_token,json=botToken,proto3" json:"bot_token,omitempty"`
	SignalerName string `protobuf:"bytes,5,opt,name=signaler_name,json=signalerName,proto3" json:"signaler_name,omitempty"`
}

func (x *TelegramSignalPublisher) Reset() {
	*x = TelegramSignalPublisher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramSignalPublisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramSignalPublisher) ProtoMessage() {}

func (x *TelegramSignalPublisher) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramSignalPublisher.ProtoReflect.Descriptor instead.
func (*TelegramSignalPublisher) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{29}
}

func (x *TelegramSignalPublisher) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TelegramSignalPublisher) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *TelegramSignalPublisher) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *TelegramSignalPublisher) GetBotToken() string {
	if x != nil {
		return x.BotToken
	}
	return ""
}

func (x *TelegramSignalPublisher) GetSignalerName() string {
	if x != nil {
		return x.SignalerName
	}
	return ""
}

type TelegramSignalPublishersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationData *commonpb.PaginationData `protobuf:"bytes,1,opt,name=pagination_data,json=paginationData,proto3" json:"pagination_data,omitempty"`
}

func (x *TelegramSignalPublishersRequest) Reset() {
	*x = TelegramSignalPublishersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramSignalPublishersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramSignalPublishersRequest) ProtoMessage() {}

func (x *TelegramSignalPublishersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramSignalPublishersRequest.ProtoReflect.Descriptor instead.
func (*TelegramSignalPublishersRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{30}
}

func (x *TelegramSignalPublishersRequest) GetPaginationData() *commonpb.PaginationData {
	if x != nil {
		return x.PaginationData
	}
	return nil
}

type TelegramSignalPublishersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TelegramSignalPublishers []*TelegramSignalPublisher `protobuf:"bytes,1,rep,name=telegram_signal_publishers,json=telegramSignalPublishers,proto3" json:"telegram_signal_publishers,omitempty"`
	Meta                     *commonpb.Meta             `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *TelegramSignalPublishersResponse) Reset() {
	*x = TelegramSignalPublishersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramSignalPublishersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramSignalPublishersResponse) ProtoMessage() {}

func (x *TelegramSignalPublishersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramSignalPublishersResponse.ProtoReflect.Descriptor instead.
func (*TelegramSignalPublishersResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{31}
}

func (x *TelegramSignalPublishersResponse) GetTelegramSignalPublishers() []*TelegramSignalPublisher {
	if x != nil {
		return x.TelegramSignalPublishers
	}
	return nil
}

func (x *TelegramSignalPublishersResponse) GetMeta() *commonpb.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type TelegramSignalPublisherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TelegramSignalPublisherRequest) Reset() {
	*x = TelegramSignalPublisherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramSignalPublisherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramSignalPublisherRequest) ProtoMessage() {}

func (x *TelegramSignalPublisherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramSignalPublisherRequest.ProtoReflect.Descriptor instead.
func (*TelegramSignalPublisherRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{32}
}

func (x *TelegramSignalPublisherRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TelegramSignalPublisherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TelegramSignalPublisher *TelegramSignalPublisher `protobuf:"bytes,1,opt,name=telegram_signal_publisher,json=telegramSignalPublisher,proto3" json:"telegram_signal_publisher,omitempty"`
}

func (x *TelegramSignalPublisherResponse) Reset() {
	*x = TelegramSignalPublisherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelegramSignalPublisherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelegramSignalPublisherResponse) ProtoMessage() {}

func (x *TelegramSignalPublisherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelegramSignalPublisherResponse.ProtoReflect.Descriptor instead.
func (*TelegramSignalPublisherResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{33}
}

func (x *TelegramSignalPublisherResponse) GetTelegramSignalPublisher() *TelegramSignalPublisher {
	if x != nil {
		return x.TelegramSignalPublisher
	}
	return nil
}

type UpdateTelegramSignalPublisherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SignalerId uint32 `protobuf:"varint,2,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	ChannelId  int64  `protobuf:"varint,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	BotToken   string `protobuf:"bytes,4,opt,name=bot_token,json=botToken,proto3" json:"bot_token,omitempty"`
}

func (x *UpdateTelegramSignalPublisherRequest) Reset() {
	*x = UpdateTelegramSignalPublisherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTelegramSignalPublisherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelegramSignalPublisherRequest) ProtoMessage() {}

func (x *UpdateTelegramSignalPublisherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelegramSignalPublisherRequest.ProtoReflect.Descriptor instead.
func (*UpdateTelegramSignalPublisherRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateTelegramSignalPublisherRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTelegramSignalPublisherRequest) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *UpdateTelegramSignalPublisherRequest) GetChannelId() int64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *UpdateTelegramSignalPublisherRequest) GetBotToken() string {
	if x != nil {
		return x.BotToken
	}
	return ""
}

type UpdateTelegramSignalPublisherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateTelegramSignalPublisherResponse) Reset() {
	*x = UpdateTelegramSignalPublisherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTelegramSignalPublisherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelegramSignalPublisherResponse) ProtoMessage() {}

func (x *UpdateTelegramSignalPublisherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelegramSignalPublisherResponse.ProtoReflect.Descriptor instead.
func (*UpdateTelegramSignalPublisherResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateTelegramSignalPublisherResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTelegramSignalPublisherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTelegramSignalPublisherRequest) Reset() {
	*x = DeleteTelegramSignalPublisherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTelegramSignalPublisherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTelegramSignalPublisherRequest) ProtoMessage() {}

func (x *DeleteTelegramSignalPublisherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTelegramSignalPublisherRequest.ProtoReflect.Descriptor instead.
func (*DeleteTelegramSignalPublisherRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteTelegramSignalPublisherRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTelegramSignalPublisherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTelegramSignalPublisherResponse) Reset() {
	*x = DeleteTelegramSignalPublisherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTelegramSignalPublisherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTelegramSignalPublisherResponse) ProtoMessage() {}

func (x *DeleteTelegramSignalPublisherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTelegramSignalPublisherResponse.ProtoReflect.Descriptor instead.
func (*DeleteTelegramSignalPublisherResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteTelegramSignalPublisherResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateCreatorSignalerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                     string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl                 string    `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Description              string    `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	SuitableFor              string    `protobuf:"bytes,5,opt,name=suitable_for,json=suitableFor,proto3" json:"suitable_for,omitempty"`
	StopLossPercentage       float64   `protobuf:"fixed64,6,opt,name=stop_loss_percentage,json=stopLossPercentage,proto3" json:"stop_loss_percentage,omitempty"`
	DefaultExecutionStrategy string    `protobuf:"bytes,7,opt,name=default_execution_strategy,json=defaultExecutionStrategy,proto3" json:"default_execution_strategy,omitempty"`
	TakeProfitsPercentages   []float64 `protobuf:"fixed64,8,rep,packed,name=take_profits_percentages,json=takeProfitsPercentages,proto3" json:"take_profits_percentages,omitempty"`
	Price                    float64   `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	PriceUnit                string    `protobuf:"bytes,10,opt,name=price_unit,json=priceUnit,proto3" json:"price_unit,omitempty"`
	CreatorId                uint32    `protobuf:"varint,11,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
}

func (x *UpdateCreatorSignalerRequest) Reset() {
	*x = UpdateCreatorSignalerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCreatorSignalerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCreatorSignalerRequest) ProtoMessage() {}

func (x *UpdateCreatorSignalerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCreatorSignalerRequest.ProtoReflect.Descriptor instead.
func (*UpdateCreatorSignalerRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{38}
}

func (x *UpdateCreatorSignalerRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCreatorSignalerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCreatorSignalerRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *UpdateCreatorSignalerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateCreatorSignalerRequest) GetSuitableFor() string {
	if x != nil {
		return x.SuitableFor
	}
	return ""
}

func (x *UpdateCreatorSignalerRequest) GetStopLossPercentage() float64 {
	if x != nil {
		return x.StopLossPercentage
	}
	return 0
}

func (x *UpdateCreatorSignalerRequest) GetDefaultExecutionStrategy() string {
	if x != nil {
		return x.DefaultExecutionStrategy
	}
	return ""
}

func (x *UpdateCreatorSignalerRequest) GetTakeProfitsPercentages() []float64 {
	if x != nil {
		return x.TakeProfitsPercentages
	}
	return nil
}

func (x *UpdateCreatorSignalerRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateCreatorSignalerRequest) GetPriceUnit() string {
	if x != nil {
		return x.PriceUnit
	}
	return ""
}

func (x *UpdateCreatorSignalerRequest) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

type UpdateCreatorSignalerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateCreatorSignalerResponse) Reset() {
	*x = UpdateCreatorSignalerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCreatorSignalerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCreatorSignalerResponse) ProtoMessage() {}

func (x *UpdateCreatorSignalerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCreatorSignalerResponse.ProtoReflect.Descriptor instead.
func (*UpdateCreatorSignalerResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateCreatorSignalerResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PublishSignalerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalerId uint32 `protobuf:"varint,1,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
}

func (x *PublishSignalerRequest) Reset() {
	*x = PublishSignalerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishSignalerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishSignalerRequest) ProtoMessage() {}

func (x *PublishSignalerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishSignalerRequest.ProtoReflect.Descriptor instead.
func (*PublishSignalerRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{40}
}

func (x *PublishSignalerRequest) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

type PublishSignalerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PublishSignalerResponse) Reset() {
	*x = PublishSignalerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishSignalerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishSignalerResponse) ProtoMessage() {}

func (x *PublishSignalerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishSignalerResponse.ProtoReflect.Descriptor instead.
func (*PublishSignalerResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{41}
}

func (x *PublishSignalerResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CheckTelegramAccountStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckTelegramAccountStatusRequest) Reset() {
	*x = CheckTelegramAccountStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTelegramAccountStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTelegramAccountStatusRequest) ProtoMessage() {}

func (x *CheckTelegramAccountStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTelegramAccountStatusRequest.ProtoReflect.Descriptor instead.
func (*CheckTelegramAccountStatusRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{42}
}

type CheckTelegramAccountStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoggedIn bool `protobuf:"varint,1,opt,name=logged_in,json=loggedIn,proto3" json:"logged_in,omitempty"`
}

func (x *CheckTelegramAccountStatusResponse) Reset() {
	*x = CheckTelegramAccountStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTelegramAccountStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTelegramAccountStatusResponse) ProtoMessage() {}

func (x *CheckTelegramAccountStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTelegramAccountStatusResponse.ProtoReflect.Descriptor instead.
func (*CheckTelegramAccountStatusResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{43}
}

func (x *CheckTelegramAccountStatusResponse) GetLoggedIn() bool {
	if x != nil {
		return x.LoggedIn
	}
	return false
}

type VerifyPhoneNumberForTelegramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *VerifyPhoneNumberForTelegramRequest) Reset() {
	*x = VerifyPhoneNumberForTelegramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPhoneNumberForTelegramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPhoneNumberForTelegramRequest) ProtoMessage() {}

func (x *VerifyPhoneNumberForTelegramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPhoneNumberForTelegramRequest.ProtoReflect.Descriptor instead.
func (*VerifyPhoneNumberForTelegramRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{44}
}

func (x *VerifyPhoneNumberForTelegramRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type VerifyPhoneNumberForTelegramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *VerifyPhoneNumberForTelegramResponse) Reset() {
	*x = VerifyPhoneNumberForTelegramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPhoneNumberForTelegramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPhoneNumberForTelegramResponse) ProtoMessage() {}

func (x *VerifyPhoneNumberForTelegramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPhoneNumberForTelegramResponse.ProtoReflect.Descriptor instead.
func (*VerifyPhoneNumberForTelegramResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{45}
}

func (x *VerifyPhoneNumberForTelegramResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type VerifyCodeForTelegramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifyCodeForTelegramRequest) Reset() {
	*x = VerifyCodeForTelegramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCodeForTelegramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeForTelegramRequest) ProtoMessage() {}

func (x *VerifyCodeForTelegramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeForTelegramRequest.ProtoReflect.Descriptor instead.
func (*VerifyCodeForTelegramRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{46}
}

func (x *VerifyCodeForTelegramRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type VerifyCodeForTelegramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok                bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	NeedSecondaryCode bool `protobuf:"varint,2,opt,name=need_secondary_code,json=needSecondaryCode,proto3" json:"need_secondary_code,omitempty"`
}

func (x *VerifyCodeForTelegramResponse) Reset() {
	*x = VerifyCodeForTelegramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCodeForTelegramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCodeForTelegramResponse) ProtoMessage() {}

func (x *VerifyCodeForTelegramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCodeForTelegramResponse.ProtoReflect.Descriptor instead.
func (*VerifyCodeForTelegramResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{47}
}

func (x *VerifyCodeForTelegramResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *VerifyCodeForTelegramResponse) GetNeedSecondaryCode() bool {
	if x != nil {
		return x.NeedSecondaryCode
	}
	return false
}

type VerifySecondaryCodeForTelegramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifySecondaryCodeForTelegramRequest) Reset() {
	*x = VerifySecondaryCodeForTelegramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySecondaryCodeForTelegramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySecondaryCodeForTelegramRequest) ProtoMessage() {}

func (x *VerifySecondaryCodeForTelegramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySecondaryCodeForTelegramRequest.ProtoReflect.Descriptor instead.
func (*VerifySecondaryCodeForTelegramRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{48}
}

func (x *VerifySecondaryCodeForTelegramRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type VerifySecondaryCodeForTelegramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *VerifySecondaryCodeForTelegramResponse) Reset() {
	*x = VerifySecondaryCodeForTelegramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifySecondaryCodeForTelegramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySecondaryCodeForTelegramResponse) ProtoMessage() {}

func (x *VerifySecondaryCodeForTelegramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySecondaryCodeForTelegramResponse.ProtoReflect.Descriptor instead.
func (*VerifySecondaryCodeForTelegramResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{49}
}

func (x *VerifySecondaryCodeForTelegramResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type LogoutTelegramAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogoutTelegramAccountRequest) Reset() {
	*x = LogoutTelegramAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutTelegramAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutTelegramAccountRequest) ProtoMessage() {}

func (x *LogoutTelegramAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutTelegramAccountRequest.ProtoReflect.Descriptor instead.
func (*LogoutTelegramAccountRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{50}
}

type LogoutTelegramAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *LogoutTelegramAccountResponse) Reset() {
	*x = LogoutTelegramAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_signaler_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutTelegramAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutTelegramAccountResponse) ProtoMessage() {}

func (x *LogoutTelegramAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_signaler_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutTelegramAccountResponse.ProtoReflect.Descriptor instead.
func (*LogoutTelegramAccountResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_signaler_proto_rawDescGZIP(), []int{51}
}

func (x *LogoutTelegramAccountResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_allprotos_signaler_proto protoreflect.FileDescriptor

var file_allprotos_signaler_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x6c, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x61, 0x6c, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a,
	0x15, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xae,
	0x01, 0x0a, 0x0a, 0x54, 0x41, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x11, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22,
	0x2e, 0x0a, 0x0d, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22,
	0x12, 0x0a, 0x10, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x22, 0x84, 0x0b, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x1a, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x18, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12,
	0x36, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x50,
	0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x38, 0x0a,
	0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x6d,
	0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x12, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x01, 0x52, 0x16, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69,
	0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x77, 0x69,
	0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x05, 0x70, 0x5f, 0x6e, 0x5f, 0x6c, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x4e, 0x4c, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c,
	0x69, 0x6f, 0x4d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c,
	0x69, 0x6f, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66,
	0x6f, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x69, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x5f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0xab, 0x02, 0x0a, 0x08, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x69, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x37, 0x0a, 0x0b, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e,
	0x54, 0x41, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x42, 0x11, 0x0a, 0x0f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x9f, 0x06, 0x0a, 0x06, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73,
	0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x6b, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0b, 0x74,
	0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x05, 0x70, 0x5f, 0x6e, 0x5f, 0x6c, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x4e, 0x4c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x02, 0x0a, 0x14, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x4a, 0x0a, 0x12, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x74, 0x6f,
	0x70, 0x4c, 0x6f, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x61, 0x6b,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x36, 0x0a, 0x17, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x22, 0x28,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0xf8, 0x03, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x11,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a,
	0x0f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x66, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22,
	0x69, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x21, 0x0a, 0x0f, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x42, 0x0a,
	0x10, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x22, 0x3a, 0x0a, 0x17, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1a, 0x0a,
	0x18, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x19, 0x44, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x04, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x36, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x15, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x65, 0x72, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x65, 0x65, 0x12,
	0x38, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65,
	0x65, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a, 0x16, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x22, 0x83, 0x01,
	0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x37, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c,
	0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xab, 0x01, 0x0a,
	0x17, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x74, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x1f, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x0f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa5,
	0x01, 0x0a, 0x20, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x1a, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x18, 0x74, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x1e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1f, 0x54, 0x65, 0x6c,
	0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x19,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x52, 0x17, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x24,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x37, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x24, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x37, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa2, 0x03, 0x0a, 0x1c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x12, 0x73, 0x74, 0x6f, 0x70, 0x4c, 0x6f, 0x73, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x67, 0x79, 0x12, 0x38, 0x0a, 0x18, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x16, 0x74, 0x61, 0x6b, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74,
	0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x22, 0x2f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x39, 0x0a, 0x16, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x17,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x22,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x22,
	0x48, 0x0a, 0x23, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x36, 0x0a, 0x24, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x22, 0x32, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x46,
	0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5f, 0x0a, 0x1d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x6e, 0x65, 0x65, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3b, 0x0a, 0x25, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72,
	0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x38, 0x0a, 0x26, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c,
	0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x1e, 0x0a,
	0x1c, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2f, 0x0a,
	0x1d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x2a, 0x4d,
	0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x41, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x03, 0x2a, 0x38, 0x0a,
	0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x49,
	0x44, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x55, 0x59, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x02, 0x2a, 0x5d, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1e, 0x0a, 0x1a,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x57, 0x41, 0x49, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x50, 0x5f, 0x41, 0x4e,
	0x44, 0x5f, 0x53, 0x4c, 0x10, 0x02, 0x2a, 0x3a, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f,
	0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x48, 0x4f, 0x52, 0x54,
	0x10, 0x02, 0x2a, 0x75, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x45, 0x4e,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x03, 0x32, 0x85, 0x11, 0x0a, 0x0f, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a,
	0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1e,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x49,
	0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x20, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x80, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x18, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73,
	0x12, 0x29, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x17, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x12, 0x28, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x1d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x77, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72,
	0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x2d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x12, 0x26, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f,
	0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x83, 0x01, 0x0a, 0x1e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x12, 0x2f, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x15, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_allprotos_signaler_proto_rawDescOnce sync.Once
	file_allprotos_signaler_proto_rawDescData = file_allprotos_signaler_proto_rawDesc
)

func file_allprotos_signaler_proto_rawDescGZIP() []byte {
	file_allprotos_signaler_proto_rawDescOnce.Do(func() {
		file_allprotos_signaler_proto_rawDescData = protoimpl.X.CompressGZIP(file_allprotos_signaler_proto_rawDescData)
	})
	return file_allprotos_signaler_proto_rawDescData
}

var file_allprotos_signaler_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_allprotos_signaler_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_allprotos_signaler_proto_goTypes = []interface{}{
	(SignalerType)(0),                              // 0: signaler.SignalerType
	(SignalSide)(0),                                // 1: signaler.SignalSide
	(ExecutionStrategy)(0),                         // 2: signaler.ExecutionStrategy
	(SignalType)(0),                                // 3: signaler.SignalType
	(SignalStatus)(0),                              // 4: signaler.SignalStatus
	(*PaginationDataRequest)(nil),                  // 5: signaler.PaginationDataRequest
	(*PaginationDataResponse)(nil),                 // 6: signaler.PaginationDataResponse
	(*TASignaler)(nil),                             // 7: signaler.TASignaler
	(*TelegSignaler)(nil),                          // 8: signaler.TelegSignaler
	(*ExternalSignaler)(nil),                       // 9: signaler.ExternalSignaler
	(*GenericSignaler)(nil),                        // 10: signaler.GenericSignaler
	(*Signaler)(nil),                               // 11: signaler.Signaler
	(*Signal)(nil),                                 // 12: signaler.Signal
	(*PublishSignalRequest)(nil),                   // 13: signaler.PublishSignalRequest
	(*PublishSignalResponse)(nil),                  // 14: signaler.PublishSignalResponse
	(*InvalidateSignalRequest)(nil),                // 15: signaler.InvalidateSignalRequest
	(*InvalidateSignalResponse)(nil),               // 16: signaler.InvalidateSignalResponse
	(*CreateSignalerRequest)(nil),                  // 17: signaler.CreateSignalerRequest
	(*CreateSignalerResponse)(nil),                 // 18: signaler.CreateSignalerResponse
	(*Meta)(nil),                                   // 19: signaler.Meta
	(*SignalersRequest)(nil),                       // 20: signaler.SignalersRequest
	(*SignalersResponse)(nil),                      // 21: signaler.SignalersResponse
	(*SignalerRequest)(nil),                        // 22: signaler.SignalerRequest
	(*SignalerResponse)(nil),                       // 23: signaler.SignalerResponse
	(*ActivateSignalerRequest)(nil),                // 24: signaler.ActivateSignalerRequest
	(*ActivateSignalerResponse)(nil),               // 25: signaler.ActivateSignalerResponse
	(*DeactivateSignalerRequest)(nil),              // 26: signaler.DeactivateSignalerRequest
	(*DeactivateSignalerResponse)(nil),             // 27: signaler.DeactivateSignalerResponse
	(*UpdateSignalerRequest)(nil),                  // 28: signaler.UpdateSignalerRequest
	(*UpdateSignalerResponse)(nil),                 // 29: signaler.UpdateSignalerResponse
	(*SignalerSignalsRequest)(nil),                 // 30: signaler.SignalerSignalsRequest
	(*SignalerSignalsResponse)(nil),                // 31: signaler.SignalerSignalsResponse
	(*CreateTelegramSignalPublisherRequest)(nil),   // 32: signaler.CreateTelegramSignalPublisherRequest
	(*CreateTelegramSignalPublisherResponse)(nil),  // 33: signaler.CreateTelegramSignalPublisherResponse
	(*TelegramSignalPublisher)(nil),                // 34: signaler.TelegramSignalPublisher
	(*TelegramSignalPublishersRequest)(nil),        // 35: signaler.TelegramSignalPublishersRequest
	(*TelegramSignalPublishersResponse)(nil),       // 36: signaler.TelegramSignalPublishersResponse
	(*TelegramSignalPublisherRequest)(nil),         // 37: signaler.TelegramSignalPublisherRequest
	(*TelegramSignalPublisherResponse)(nil),        // 38: signaler.TelegramSignalPublisherResponse
	(*UpdateTelegramSignalPublisherRequest)(nil),   // 39: signaler.UpdateTelegramSignalPublisherRequest
	(*UpdateTelegramSignalPublisherResponse)(nil),  // 40: signaler.UpdateTelegramSignalPublisherResponse
	(*DeleteTelegramSignalPublisherRequest)(nil),   // 41: signaler.DeleteTelegramSignalPublisherRequest
	(*DeleteTelegramSignalPublisherResponse)(nil),  // 42: signaler.DeleteTelegramSignalPublisherResponse
	(*UpdateCreatorSignalerRequest)(nil),           // 43: signaler.UpdateCreatorSignalerRequest
	(*UpdateCreatorSignalerResponse)(nil),          // 44: signaler.UpdateCreatorSignalerResponse
	(*PublishSignalerRequest)(nil),                 // 45: signaler.PublishSignalerRequest
	(*PublishSignalerResponse)(nil),                // 46: signaler.PublishSignalerResponse
	(*CheckTelegramAccountStatusRequest)(nil),      // 47: signaler.CheckTelegramAccountStatusRequest
	(*CheckTelegramAccountStatusResponse)(nil),     // 48: signaler.CheckTelegramAccountStatusResponse
	(*VerifyPhoneNumberForTelegramRequest)(nil),    // 49: signaler.VerifyPhoneNumberForTelegramRequest
	(*VerifyPhoneNumberForTelegramResponse)(nil),   // 50: signaler.VerifyPhoneNumberForTelegramResponse
	(*VerifyCodeForTelegramRequest)(nil),           // 51: signaler.VerifyCodeForTelegramRequest
	(*VerifyCodeForTelegramResponse)(nil),          // 52: signaler.VerifyCodeForTelegramResponse
	(*VerifySecondaryCodeForTelegramRequest)(nil),  // 53: signaler.VerifySecondaryCodeForTelegramRequest
	(*VerifySecondaryCodeForTelegramResponse)(nil), // 54: signaler.VerifySecondaryCodeForTelegramResponse
	(*LogoutTelegramAccountRequest)(nil),           // 55: signaler.LogoutTelegramAccountRequest
	(*LogoutTelegramAccountResponse)(nil),          // 56: signaler.LogoutTelegramAccountResponse
	(commonpb.Strategy)(0),                         // 57: common.Strategy
	(commonpb.Interval)(0),                         // 58: common.Interval
	(*commonpb.IndicatorConfig)(nil),               // 59: common.IndicatorConfig
	(*timestamp.Timestamp)(nil),                    // 60: google.protobuf.Timestamp
	(*commonpb.PaginationData)(nil),                // 61: common.PaginationData
	(*commonpb.Meta)(nil),                          // 62: common.Meta
}
var file_allprotos_signaler_proto_depIdxs = []int32{
	57, // 0: signaler.TASignaler.strategy:type_name -> common.Strategy
	58, // 1: signaler.TASignaler.interval:type_name -> common.Interval
	59, // 2: signaler.TASignaler.indicator_configs:type_name -> common.IndicatorConfig
	0,  // 3: signaler.GenericSignaler.type:type_name -> signaler.SignalerType
	2,  // 4: signaler.GenericSignaler.default_execution_strategy:type_name -> signaler.ExecutionStrategy
	60, // 5: signaler.GenericSignaler.created_at:type_name -> google.protobuf.Timestamp
	10, // 6: signaler.Signaler.common_attributes:type_name -> signaler.GenericSignaler
	7,  // 7: signaler.Signaler.ta_signaler:type_name -> signaler.TASignaler
	9,  // 8: signaler.Signaler.external_signaler:type_name -> signaler.ExternalSignaler
	8,  // 9: signaler.Signaler.teleg_signaler:type_name -> signaler.TelegSignaler
	60, // 10: signaler.Signal.signal_date:type_name -> google.protobuf.Timestamp
	2,  // 11: signaler.Signal.execution_strategy:type_name -> signaler.ExecutionStrategy
	3,  // 12: signaler.Signal.type:type_name -> signaler.SignalType
	60, // 13: signaler.Signal.open_date:type_name -> google.protobuf.Timestamp
	60, // 14: signaler.Signal.close_date:type_name -> google.protobuf.Timestamp
	4,  // 15: signaler.Signal.status:type_name -> signaler.SignalStatus
	2,  // 16: signaler.PublishSignalRequest.execution_strategy:type_name -> signaler.ExecutionStrategy
	1,  // 17: signaler.PublishSignalRequest.side:type_name -> signaler.SignalSide
	11, // 18: signaler.CreateSignalerRequest.signaler:type_name -> signaler.Signaler
	0,  // 19: signaler.SignalersRequest.type:type_name -> signaler.SignalerType
	5,  // 20: signaler.SignalersRequest.pagination_data:type_name -> signaler.PaginationDataRequest
	11, // 21: signaler.SignalersResponse.signalers:type_name -> signaler.Signaler
	19, // 22: signaler.SignalersResponse.meta:type_name -> signaler.Meta
	11, // 23: signaler.SignalerResponse.signaler:type_name -> signaler.Signaler
	12, // 24: signaler.SignalerSignalsResponse.signals:type_name -> signaler.Signal
	61, // 25: signaler.TelegramSignalPublishersRequest.pagination_data:type_name -> common.PaginationData
	34, // 26: signaler.TelegramSignalPublishersResponse.telegram_signal_publishers:type_name -> signaler.TelegramSignalPublisher
	62, // 27: signaler.TelegramSignalPublishersResponse.meta:type_name -> common.Meta
	34, // 28: signaler.TelegramSignalPublisherResponse.telegram_signal_publisher:type_name -> signaler.TelegramSignalPublisher
	13, // 29: signaler.SignalerService.PublishSignal:input_type -> signaler.PublishSignalRequest
	15, // 30: signaler.SignalerService.InvalidateSignal:input_type -> signaler.InvalidateSignalRequest
	17, // 31: signaler.SignalerService.CreateSignaler:input_type -> signaler.CreateSignalerRequest
	20, // 32: signaler.SignalerService.Signalers:input_type -> signaler.SignalersRequest
	22, // 33: signaler.SignalerService.Signaler:input_type -> signaler.SignalerRequest
	24, // 34: signaler.SignalerService.ActivateSignaler:input_type -> signaler.ActivateSignalerRequest
	26, // 35: signaler.SignalerService.DeactivateSignaler:input_type -> signaler.DeactivateSignalerRequest
	28, // 36: signaler.SignalerService.UpdateSignaler:input_type -> signaler.UpdateSignalerRequest
	30, // 37: signaler.SignalerService.SignalerSignals:input_type -> signaler.SignalerSignalsRequest
	32, // 38: signaler.SignalerService.CreateTelegramSignalPublisher:input_type -> signaler.CreateTelegramSignalPublisherRequest
	35, // 39: signaler.SignalerService.TelegramSignalPublishers:input_type -> signaler.TelegramSignalPublishersRequest
	37, // 40: signaler.SignalerService.TelegramSignalPublisher:input_type -> signaler.TelegramSignalPublisherRequest
	39, // 41: signaler.SignalerService.UpdateTelegramSignalPublisher:input_type -> signaler.UpdateTelegramSignalPublisherRequest
	41, // 42: signaler.SignalerService.DeleteTelegramSignalPublisher:input_type -> signaler.DeleteTelegramSignalPublisherRequest
	43, // 43: signaler.SignalerService.UpdateCreatorSignaler:input_type -> signaler.UpdateCreatorSignalerRequest
	45, // 44: signaler.SignalerService.PublishSignaler:input_type -> signaler.PublishSignalerRequest
	47, // 45: signaler.SignalerService.CheckTelegramAccountStatus:input_type -> signaler.CheckTelegramAccountStatusRequest
	49, // 46: signaler.SignalerService.VerifyPhoneNumberForTelegram:input_type -> signaler.VerifyPhoneNumberForTelegramRequest
	51, // 47: signaler.SignalerService.VerifyCodeForTelegram:input_type -> signaler.VerifyCodeForTelegramRequest
	53, // 48: signaler.SignalerService.VerifySecondaryCodeForTelegram:input_type -> signaler.VerifySecondaryCodeForTelegramRequest
	55, // 49: signaler.SignalerService.LogoutTelegramAccount:input_type -> signaler.LogoutTelegramAccountRequest
	14, // 50: signaler.SignalerService.PublishSignal:output_type -> signaler.PublishSignalResponse
	16, // 51: signaler.SignalerService.InvalidateSignal:output_type -> signaler.InvalidateSignalResponse
	18, // 52: signaler.SignalerService.CreateSignaler:output_type -> signaler.CreateSignalerResponse
	21, // 53: signaler.SignalerService.Signalers:output_type -> signaler.SignalersResponse
	23, // 54: signaler.SignalerService.Signaler:output_type -> signaler.SignalerResponse
	25, // 55: signaler.SignalerService.ActivateSignaler:output_type -> signaler.ActivateSignalerResponse
	27, // 56: signaler.SignalerService.DeactivateSignaler:output_type -> signaler.DeactivateSignalerResponse
	29, // 57: signaler.SignalerService.UpdateSignaler:output_type -> signaler.UpdateSignalerResponse
	31, // 58: signaler.SignalerService.SignalerSignals:output_type -> signaler.SignalerSignalsResponse
	33, // 59: signaler.SignalerService.CreateTelegramSignalPublisher:output_type -> signaler.CreateTelegramSignalPublisherResponse
	36, // 60: signaler.SignalerService.TelegramSignalPublishers:output_type -> signaler.TelegramSignalPublishersResponse
	38, // 61: signaler.SignalerService.TelegramSignalPublisher:output_type -> signaler.TelegramSignalPublisherResponse
	40, // 62: signaler.SignalerService.UpdateTelegramSignalPublisher:output_type -> signaler.UpdateTelegramSignalPublisherResponse
	42, // 63: signaler.SignalerService.DeleteTelegramSignalPublisher:output_type -> signaler.DeleteTelegramSignalPublisherResponse
	44, // 64: signaler.SignalerService.UpdateCreatorSignaler:output_type -> signaler.UpdateCreatorSignalerResponse
	46, // 65: signaler.SignalerService.PublishSignaler:output_type -> signaler.PublishSignalerResponse
	48, // 66: signaler.SignalerService.CheckTelegramAccountStatus:output_type -> signaler.CheckTelegramAccountStatusResponse
	50, // 67: signaler.SignalerService.VerifyPhoneNumberForTelegram:output_type -> signaler.VerifyPhoneNumberForTelegramResponse
	52, // 68: signaler.SignalerService.VerifyCodeForTelegram:output_type -> signaler.VerifyCodeForTelegramResponse
	54, // 69: signaler.SignalerService.VerifySecondaryCodeForTelegram:output_type -> signaler.VerifySecondaryCodeForTelegramResponse
	56, // 70: signaler.SignalerService.LogoutTelegramAccount:output_type -> signaler.LogoutTelegramAccountResponse
	50, // [50:71] is the sub-list for method output_type
	29, // [29:50] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_allprotos_signaler_proto_init() }
func file_allprotos_signaler_proto_init() {
	if File_allprotos_signaler_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_allprotos_signaler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TASignaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegSignaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalSignaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericSignaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signaler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishSignalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidateSignalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidateSignalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignalerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignalerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateSignalerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateSignalerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateSignalerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateSignalerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSignalerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSignalerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalerSignalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalerSignalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTelegramSignalPublisherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTelegramSignalPublisherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramSignalPublisher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramSignalPublishersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramSignalPublishersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramSignalPublisherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelegramSignalPublisherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTelegramSignalPublisherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTelegramSignalPublisherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTelegramSignalPublisherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTelegramSignalPublisherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCreatorSignalerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCreatorSignalerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishSignalerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishSignalerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTelegramAccountStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTelegramAccountStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPhoneNumberForTelegramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPhoneNumberForTelegramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCodeForTelegramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCodeForTelegramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySecondaryCodeForTelegramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifySecondaryCodeForTelegramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutTelegramAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_signaler_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutTelegramAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_allprotos_signaler_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Signaler_TaSignaler)(nil),
		(*Signaler_ExternalSignaler)(nil),
		(*Signaler_TelegSignaler)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_allprotos_signaler_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_allprotos_signaler_proto_goTypes,
		DependencyIndexes: file_allprotos_signaler_proto_depIdxs,
		EnumInfos:         file_allprotos_signaler_proto_enumTypes,
		MessageInfos:      file_allprotos_signaler_proto_msgTypes,
	}.Build()
	File_allprotos_signaler_proto = out.File
	file_allprotos_signaler_proto_rawDesc = nil
	file_allprotos_signaler_proto_goTypes = nil
	file_allprotos_signaler_proto_depIdxs = nil
}
