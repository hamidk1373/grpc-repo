// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: allprotos/portfolioManager.proto

package portfoliomanagerpb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	commonpb "gitlab.com/shanpanze/grpc-repo/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PositionStatus int32

const (
	PositionStatus_UNKNOWN_POSITION_STATUS PositionStatus = 0
	PositionStatus_PENDING_TO_OPEN         PositionStatus = 1
	PositionStatus_FAILED_TO_OPEN          PositionStatus = 2
	PositionStatus_OPEN                    PositionStatus = 3
	PositionStatus_PENDING_TO_CLOSE        PositionStatus = 4
	PositionStatus_FAILED_TO_CLOSE         PositionStatus = 5
	PositionStatus_CLOSE                   PositionStatus = 6
	PositionStatus_OPEN_CANCELLED          PositionStatus = 7
)

// Enum value maps for PositionStatus.
var (
	PositionStatus_name = map[int32]string{
		0: "UNKNOWN_POSITION_STATUS",
		1: "PENDING_TO_OPEN",
		2: "FAILED_TO_OPEN",
		3: "OPEN",
		4: "PENDING_TO_CLOSE",
		5: "FAILED_TO_CLOSE",
		6: "CLOSE",
		7: "OPEN_CANCELLED",
	}
	PositionStatus_value = map[string]int32{
		"UNKNOWN_POSITION_STATUS": 0,
		"PENDING_TO_OPEN":         1,
		"FAILED_TO_OPEN":          2,
		"OPEN":                    3,
		"PENDING_TO_CLOSE":        4,
		"FAILED_TO_CLOSE":         5,
		"CLOSE":                   6,
		"OPEN_CANCELLED":          7,
	}
)

func (x PositionStatus) Enum() *PositionStatus {
	p := new(PositionStatus)
	*p = x
	return p
}

func (x PositionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PositionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_portfolioManager_proto_enumTypes[0].Descriptor()
}

func (PositionStatus) Type() protoreflect.EnumType {
	return &file_allprotos_portfolioManager_proto_enumTypes[0]
}

func (x PositionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PositionStatus.Descriptor instead.
func (PositionStatus) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{0}
}

type PortfolioStatus int32

const (
	PortfolioStatus_UNKNOWN_PORTFOLIO_STATUS PortfolioStatus = 0
	PortfolioStatus_PENDING_FOR_SUBSCRIPTION PortfolioStatus = 1
	PortfolioStatus_SUBSCRIPTION_FAILED      PortfolioStatus = 2
	PortfolioStatus_ACTIVE                   PortfolioStatus = 3
	PortfolioStatus_PENDING_FOR_DEACTIVATION PortfolioStatus = 4
	PortfolioStatus_INACTIVE                 PortfolioStatus = 5
	PortfolioStatus_PENDING_FOR_CANCELATION  PortfolioStatus = 6
	PortfolioStatus_CANCELED                 PortfolioStatus = 7
	PortfolioStatus_EXCHANGE_OUT_OF_SYNC     PortfolioStatus = 8
	PortfolioStatus_PAUSED                   PortfolioStatus = 9
	PortfolioStatus_INVALID_API_KEY          PortfolioStatus = 10
)

// Enum value maps for PortfolioStatus.
var (
	PortfolioStatus_name = map[int32]string{
		0:  "UNKNOWN_PORTFOLIO_STATUS",
		1:  "PENDING_FOR_SUBSCRIPTION",
		2:  "SUBSCRIPTION_FAILED",
		3:  "ACTIVE",
		4:  "PENDING_FOR_DEACTIVATION",
		5:  "INACTIVE",
		6:  "PENDING_FOR_CANCELATION",
		7:  "CANCELED",
		8:  "EXCHANGE_OUT_OF_SYNC",
		9:  "PAUSED",
		10: "INVALID_API_KEY",
	}
	PortfolioStatus_value = map[string]int32{
		"UNKNOWN_PORTFOLIO_STATUS": 0,
		"PENDING_FOR_SUBSCRIPTION": 1,
		"SUBSCRIPTION_FAILED":      2,
		"ACTIVE":                   3,
		"PENDING_FOR_DEACTIVATION": 4,
		"INACTIVE":                 5,
		"PENDING_FOR_CANCELATION":  6,
		"CANCELED":                 7,
		"EXCHANGE_OUT_OF_SYNC":     8,
		"PAUSED":                   9,
		"INVALID_API_KEY":          10,
	}
)

func (x PortfolioStatus) Enum() *PortfolioStatus {
	p := new(PortfolioStatus)
	*p = x
	return p
}

func (x PortfolioStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PortfolioStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_portfolioManager_proto_enumTypes[1].Descriptor()
}

func (PortfolioStatus) Type() protoreflect.EnumType {
	return &file_allprotos_portfolioManager_proto_enumTypes[1]
}

func (x PortfolioStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PortfolioStatus.Descriptor instead.
func (PortfolioStatus) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{1}
}

type PaginationDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *PaginationDataRequest) Reset() {
	*x = PaginationDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationDataRequest) ProtoMessage() {}

func (x *PaginationDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationDataRequest.ProtoReflect.Descriptor instead.
func (*PaginationDataRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationDataRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationDataRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type DeletePortfolioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePortfolioRequest) Reset() {
	*x = DeletePortfolioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortfolioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortfolioRequest) ProtoMessage() {}

func (x *DeletePortfolioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortfolioRequest.ProtoReflect.Descriptor instead.
func (*DeletePortfolioRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{1}
}

func (x *DeletePortfolioRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeletePortfolioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePortfolioResponse) Reset() {
	*x = DeletePortfolioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePortfolioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePortfolioResponse) ProtoMessage() {}

func (x *DeletePortfolioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePortfolioResponse.ProtoReflect.Descriptor instead.
func (*DeletePortfolioResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{2}
}

func (x *DeletePortfolioResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair           string               `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
	OpenDate       *timestamp.Timestamp `protobuf:"bytes,2,opt,name=open_date,json=openDate,proto3" json:"open_date,omitempty"`
	CloseDate      *timestamp.Timestamp `protobuf:"bytes,3,opt,name=close_date,json=closeDate,proto3" json:"close_date,omitempty"`
	OpenFeeAmount  float64              `protobuf:"fixed64,4,opt,name=open_fee_amount,json=openFeeAmount,proto3" json:"open_fee_amount,omitempty"`
	CloseFeeAmount float64              `protobuf:"fixed64,5,opt,name=close_fee_amount,json=closeFeeAmount,proto3" json:"close_fee_amount,omitempty"`
	OpenPrice      float64              `protobuf:"fixed64,6,opt,name=open_price,json=openPrice,proto3" json:"open_price,omitempty"`
	ClosePrice     float64              `protobuf:"fixed64,7,opt,name=close_price,json=closePrice,proto3" json:"close_price,omitempty"`
	Amount         float64              `protobuf:"fixed64,8,opt,name=amount,proto3" json:"amount,omitempty"`
	QuoteAmount    float64              `protobuf:"fixed64,9,opt,name=quote_amount,json=quoteAmount,proto3" json:"quote_amount,omitempty"`
	PNL            float64              `protobuf:"fixed64,10,opt,name=p_n_l,json=pNL,proto3" json:"p_n_l,omitempty"`
	Status         PositionStatus       `protobuf:"varint,11,opt,name=status,proto3,enum=portfoliomanager.PositionStatus" json:"status,omitempty"`
	CurrentPrice   float64              `protobuf:"fixed64,12,opt,name=current_price,json=currentPrice,proto3" json:"current_price,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{3}
}

func (x *Position) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *Position) GetOpenDate() *timestamp.Timestamp {
	if x != nil {
		return x.OpenDate
	}
	return nil
}

func (x *Position) GetCloseDate() *timestamp.Timestamp {
	if x != nil {
		return x.CloseDate
	}
	return nil
}

func (x *Position) GetOpenFeeAmount() float64 {
	if x != nil {
		return x.OpenFeeAmount
	}
	return 0
}

func (x *Position) GetCloseFeeAmount() float64 {
	if x != nil {
		return x.CloseFeeAmount
	}
	return 0
}

func (x *Position) GetOpenPrice() float64 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *Position) GetClosePrice() float64 {
	if x != nil {
		return x.ClosePrice
	}
	return 0
}

func (x *Position) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Position) GetQuoteAmount() float64 {
	if x != nil {
		return x.QuoteAmount
	}
	return 0
}

func (x *Position) GetPNL() float64 {
	if x != nil {
		return x.PNL
	}
	return 0
}

func (x *Position) GetStatus() PositionStatus {
	if x != nil {
		return x.Status
	}
	return PositionStatus_UNKNOWN_POSITION_STATUS
}

func (x *Position) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

type ValueHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Value float64              `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ValueHistory) Reset() {
	*x = ValueHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValueHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValueHistory) ProtoMessage() {}

func (x *ValueHistory) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValueHistory.ProtoReflect.Descriptor instead.
func (*ValueHistory) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{4}
}

func (x *ValueHistory) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ValueHistory) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type CreatePortfolioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         uint32               `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SignalerId     uint32               `protobuf:"varint,2,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	UserApiKeyId   uint32               `protobuf:"varint,3,opt,name=user_api_key_id,json=userApiKeyId,proto3" json:"user_api_key_id,omitempty"`
	AssignedAmount float64              `protobuf:"fixed64,4,opt,name=assigned_amount,json=assignedAmount,proto3" json:"assigned_amount,omitempty"`
	UpperLimit     float64              `protobuf:"fixed64,5,opt,name=upper_limit,json=upperLimit,proto3" json:"upper_limit,omitempty"`
	LowerLimit     float64              `protobuf:"fixed64,6,opt,name=lower_limit,json=lowerLimit,proto3" json:"lower_limit,omitempty"`
	ExpirationDate *timestamp.Timestamp `protobuf:"bytes,7,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
}

func (x *CreatePortfolioRequest) Reset() {
	*x = CreatePortfolioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePortfolioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePortfolioRequest) ProtoMessage() {}

func (x *CreatePortfolioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePortfolioRequest.ProtoReflect.Descriptor instead.
func (*CreatePortfolioRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePortfolioRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreatePortfolioRequest) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *CreatePortfolioRequest) GetUserApiKeyId() uint32 {
	if x != nil {
		return x.UserApiKeyId
	}
	return 0
}

func (x *CreatePortfolioRequest) GetAssignedAmount() float64 {
	if x != nil {
		return x.AssignedAmount
	}
	return 0
}

func (x *CreatePortfolioRequest) GetUpperLimit() float64 {
	if x != nil {
		return x.UpperLimit
	}
	return 0
}

func (x *CreatePortfolioRequest) GetLowerLimit() float64 {
	if x != nil {
		return x.LowerLimit
	}
	return 0
}

func (x *CreatePortfolioRequest) GetExpirationDate() *timestamp.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

type CreatePortfolioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreatePortfolioResponse) Reset() {
	*x = CreatePortfolioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePortfolioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePortfolioResponse) ProtoMessage() {}

func (x *CreatePortfolioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePortfolioResponse.ProtoReflect.Descriptor instead.
func (*CreatePortfolioResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePortfolioResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Portfolio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SignalerId      uint32               `protobuf:"varint,2,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	SignalerName    string               `protobuf:"bytes,3,opt,name=signaler_name,json=signalerName,proto3" json:"signaler_name,omitempty"`
	User            string               `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	UserApiKeyId    uint32               `protobuf:"varint,5,opt,name=user_api_key_id,json=userApiKeyId,proto3" json:"user_api_key_id,omitempty"`
	UserApiKeyName  string               `protobuf:"bytes,6,opt,name=user_api_key_name,json=userApiKeyName,proto3" json:"user_api_key_name,omitempty"`
	Exchange        commonpb.Exchange    `protobuf:"varint,7,opt,name=exchange,proto3,enum=common.Exchange" json:"exchange,omitempty"`
	AssignedAmount  float64              `protobuf:"fixed64,8,opt,name=assigned_amount,json=assignedAmount,proto3" json:"assigned_amount,omitempty"`
	RemainingAmount float64              `protobuf:"fixed64,9,opt,name=remaining_amount,json=remainingAmount,proto3" json:"remaining_amount,omitempty"`
	PNL             float64              `protobuf:"fixed64,10,opt,name=p_n_l,json=pNL,proto3" json:"p_n_l,omitempty"`
	Positions       []*Position          `protobuf:"bytes,11,rep,name=positions,proto3" json:"positions,omitempty"`
	ValueHistory    []*ValueHistory      `protobuf:"bytes,12,rep,name=value_history,json=valueHistory,proto3" json:"value_history,omitempty"`
	BaseCurrency    string               `protobuf:"bytes,13,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	UpperLimit      float64              `protobuf:"fixed64,14,opt,name=upper_limit,json=upperLimit,proto3" json:"upper_limit,omitempty"`
	LowerLimit      float64              `protobuf:"fixed64,15,opt,name=lower_limit,json=lowerLimit,proto3" json:"lower_limit,omitempty"`
	WinRate         float64              `protobuf:"fixed64,16,opt,name=win_rate,json=winRate,proto3" json:"win_rate,omitempty"`
	Status          PortfolioStatus      `protobuf:"varint,17,opt,name=status,proto3,enum=portfoliomanager.PortfolioStatus" json:"status,omitempty"`
	CreatedAt       *timestamp.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Price           float64              `protobuf:"fixed64,19,opt,name=price,proto3" json:"price,omitempty"`
	PriceUnit       string               `protobuf:"bytes,20,opt,name=price_unit,json=priceUnit,proto3" json:"price_unit,omitempty"`
	SignalerImage   string               `protobuf:"bytes,21,opt,name=signaler_image,json=signalerImage,proto3" json:"signaler_image,omitempty"`
	ExpirationDate  *timestamp.Timestamp `protobuf:"bytes,22,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	UserId          uint32               `protobuf:"varint,23,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *Portfolio) Reset() {
	*x = Portfolio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Portfolio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Portfolio) ProtoMessage() {}

func (x *Portfolio) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Portfolio.ProtoReflect.Descriptor instead.
func (*Portfolio) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{7}
}

func (x *Portfolio) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Portfolio) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *Portfolio) GetSignalerName() string {
	if x != nil {
		return x.SignalerName
	}
	return ""
}

func (x *Portfolio) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Portfolio) GetUserApiKeyId() uint32 {
	if x != nil {
		return x.UserApiKeyId
	}
	return 0
}

func (x *Portfolio) GetUserApiKeyName() string {
	if x != nil {
		return x.UserApiKeyName
	}
	return ""
}

func (x *Portfolio) GetExchange() commonpb.Exchange {
	if x != nil {
		return x.Exchange
	}
	return commonpb.Exchange(0)
}

func (x *Portfolio) GetAssignedAmount() float64 {
	if x != nil {
		return x.AssignedAmount
	}
	return 0
}

func (x *Portfolio) GetRemainingAmount() float64 {
	if x != nil {
		return x.RemainingAmount
	}
	return 0
}

func (x *Portfolio) GetPNL() float64 {
	if x != nil {
		return x.PNL
	}
	return 0
}

func (x *Portfolio) GetPositions() []*Position {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *Portfolio) GetValueHistory() []*ValueHistory {
	if x != nil {
		return x.ValueHistory
	}
	return nil
}

func (x *Portfolio) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *Portfolio) GetUpperLimit() float64 {
	if x != nil {
		return x.UpperLimit
	}
	return 0
}

func (x *Portfolio) GetLowerLimit() float64 {
	if x != nil {
		return x.LowerLimit
	}
	return 0
}

func (x *Portfolio) GetWinRate() float64 {
	if x != nil {
		return x.WinRate
	}
	return 0
}

func (x *Portfolio) GetStatus() PortfolioStatus {
	if x != nil {
		return x.Status
	}
	return PortfolioStatus_UNKNOWN_PORTFOLIO_STATUS
}

func (x *Portfolio) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Portfolio) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Portfolio) GetPriceUnit() string {
	if x != nil {
		return x.PriceUnit
	}
	return ""
}

func (x *Portfolio) GetSignalerImage() string {
	if x != nil {
		return x.SignalerImage
	}
	return ""
}

func (x *Portfolio) GetExpirationDate() *timestamp.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *Portfolio) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{8}
}

func (x *Meta) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Meta) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Meta) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PortfoliosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SignalerId     uint32                 `protobuf:"varint,2,opt,name=signaler_id,json=signalerId,proto3" json:"signaler_id,omitempty"`
	Currency       string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Status         PortfolioStatus        `protobuf:"varint,4,opt,name=status,proto3,enum=portfoliomanager.PortfolioStatus" json:"status,omitempty"`
	PaginationData *PaginationDataRequest `protobuf:"bytes,5,opt,name=pagination_data,json=paginationData,proto3" json:"pagination_data,omitempty"`
}

func (x *PortfoliosRequest) Reset() {
	*x = PortfoliosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfoliosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfoliosRequest) ProtoMessage() {}

func (x *PortfoliosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfoliosRequest.ProtoReflect.Descriptor instead.
func (*PortfoliosRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{9}
}

func (x *PortfoliosRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PortfoliosRequest) GetSignalerId() uint32 {
	if x != nil {
		return x.SignalerId
	}
	return 0
}

func (x *PortfoliosRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PortfoliosRequest) GetStatus() PortfolioStatus {
	if x != nil {
		return x.Status
	}
	return PortfolioStatus_UNKNOWN_PORTFOLIO_STATUS
}

func (x *PortfoliosRequest) GetPaginationData() *PaginationDataRequest {
	if x != nil {
		return x.PaginationData
	}
	return nil
}

type PortfoliosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Portfolios []*Portfolio `protobuf:"bytes,1,rep,name=portfolios,proto3" json:"portfolios,omitempty"`
	Meta       *Meta        `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *PortfoliosResponse) Reset() {
	*x = PortfoliosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfoliosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfoliosResponse) ProtoMessage() {}

func (x *PortfoliosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfoliosResponse.ProtoReflect.Descriptor instead.
func (*PortfoliosResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{10}
}

func (x *PortfoliosResponse) GetPortfolios() []*Portfolio {
	if x != nil {
		return x.Portfolios
	}
	return nil
}

func (x *PortfoliosResponse) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type PortfolioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PortfolioRequest) Reset() {
	*x = PortfolioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioRequest) ProtoMessage() {}

func (x *PortfolioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioRequest.ProtoReflect.Descriptor instead.
func (*PortfolioRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{11}
}

func (x *PortfolioRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PortfolioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Portfolio *Portfolio `protobuf:"bytes,1,opt,name=portfolio,proto3" json:"portfolio,omitempty"`
}

func (x *PortfolioResponse) Reset() {
	*x = PortfolioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioResponse) ProtoMessage() {}

func (x *PortfolioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioResponse.ProtoReflect.Descriptor instead.
func (*PortfolioResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{12}
}

func (x *PortfolioResponse) GetPortfolio() *Portfolio {
	if x != nil {
		return x.Portfolio
	}
	return nil
}

type DeactivatePortfolioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortfolioId    uint32 `protobuf:"varint,1,opt,name=portfolio_id,json=portfolioId,proto3" json:"portfolio_id,omitempty"`
	ClosePositions bool   `protobuf:"varint,2,opt,name=close_positions,json=closePositions,proto3" json:"close_positions,omitempty"`
}

func (x *DeactivatePortfolioRequest) Reset() {
	*x = DeactivatePortfolioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivatePortfolioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivatePortfolioRequest) ProtoMessage() {}

func (x *DeactivatePortfolioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivatePortfolioRequest.ProtoReflect.Descriptor instead.
func (*DeactivatePortfolioRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{13}
}

func (x *DeactivatePortfolioRequest) GetPortfolioId() uint32 {
	if x != nil {
		return x.PortfolioId
	}
	return 0
}

func (x *DeactivatePortfolioRequest) GetClosePositions() bool {
	if x != nil {
		return x.ClosePositions
	}
	return false
}

type DeactivatePortfolioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeactivatePortfolioResponse) Reset() {
	*x = DeactivatePortfolioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivatePortfolioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivatePortfolioResponse) ProtoMessage() {}

func (x *DeactivatePortfolioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivatePortfolioResponse.ProtoReflect.Descriptor instead.
func (*DeactivatePortfolioResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{14}
}

type PausePortfolioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortfolioId    uint32 `protobuf:"varint,1,opt,name=portfolio_id,json=portfolioId,proto3" json:"portfolio_id,omitempty"`
	ClosePositions bool   `protobuf:"varint,2,opt,name=close_positions,json=closePositions,proto3" json:"close_positions,omitempty"`
	UserId         uint32 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsAdmin        bool   `protobuf:"varint,4,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *PausePortfolioRequest) Reset() {
	*x = PausePortfolioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PausePortfolioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PausePortfolioRequest) ProtoMessage() {}

func (x *PausePortfolioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PausePortfolioRequest.ProtoReflect.Descriptor instead.
func (*PausePortfolioRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{15}
}

func (x *PausePortfolioRequest) GetPortfolioId() uint32 {
	if x != nil {
		return x.PortfolioId
	}
	return 0
}

func (x *PausePortfolioRequest) GetClosePositions() bool {
	if x != nil {
		return x.ClosePositions
	}
	return false
}

func (x *PausePortfolioRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PausePortfolioRequest) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type PausePortfolioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PausePortfolioResponse) Reset() {
	*x = PausePortfolioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PausePortfolioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PausePortfolioResponse) ProtoMessage() {}

func (x *PausePortfolioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PausePortfolioResponse.ProtoReflect.Descriptor instead.
func (*PausePortfolioResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{16}
}

type UnpausePortfolioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortfolioId uint32 `protobuf:"varint,1,opt,name=portfolio_id,json=portfolioId,proto3" json:"portfolio_id,omitempty"`
	UserId      uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsAdmin     bool   `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *UnpausePortfolioRequest) Reset() {
	*x = UnpausePortfolioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpausePortfolioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpausePortfolioRequest) ProtoMessage() {}

func (x *UnpausePortfolioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpausePortfolioRequest.ProtoReflect.Descriptor instead.
func (*UnpausePortfolioRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{17}
}

func (x *UnpausePortfolioRequest) GetPortfolioId() uint32 {
	if x != nil {
		return x.PortfolioId
	}
	return 0
}

func (x *UnpausePortfolioRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnpausePortfolioRequest) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type UnpausePortfolioResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnpausePortfolioResponse) Reset() {
	*x = UnpausePortfolioResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpausePortfolioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpausePortfolioResponse) ProtoMessage() {}

func (x *UnpausePortfolioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpausePortfolioResponse.ProtoReflect.Descriptor instead.
func (*UnpausePortfolioResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{18}
}

type CancelSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortfolioId uint32 `protobuf:"varint,1,opt,name=portfolio_id,json=portfolioId,proto3" json:"portfolio_id,omitempty"`
	UserId      uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsAdmin     bool   `protobuf:"varint,3,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *CancelSubscriptionRequest) Reset() {
	*x = CancelSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscriptionRequest) ProtoMessage() {}

func (x *CancelSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*CancelSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{19}
}

func (x *CancelSubscriptionRequest) GetPortfolioId() uint32 {
	if x != nil {
		return x.PortfolioId
	}
	return 0
}

func (x *CancelSubscriptionRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CancelSubscriptionRequest) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type CancelSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelSubscriptionResponse) Reset() {
	*x = CancelSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelSubscriptionResponse) ProtoMessage() {}

func (x *CancelSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*CancelSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{20}
}

type UpdatePortfolioThresholdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortfolioId uint32  `protobuf:"varint,1,opt,name=portfolio_id,json=portfolioId,proto3" json:"portfolio_id,omitempty"`
	UpperLimit  float64 `protobuf:"fixed64,2,opt,name=upper_limit,json=upperLimit,proto3" json:"upper_limit,omitempty"`
	LowerLimit  float64 `protobuf:"fixed64,3,opt,name=lower_limit,json=lowerLimit,proto3" json:"lower_limit,omitempty"`
	UserId      uint32  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdatePortfolioThresholdRequest) Reset() {
	*x = UpdatePortfolioThresholdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortfolioThresholdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortfolioThresholdRequest) ProtoMessage() {}

func (x *UpdatePortfolioThresholdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortfolioThresholdRequest.ProtoReflect.Descriptor instead.
func (*UpdatePortfolioThresholdRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{21}
}

func (x *UpdatePortfolioThresholdRequest) GetPortfolioId() uint32 {
	if x != nil {
		return x.PortfolioId
	}
	return 0
}

func (x *UpdatePortfolioThresholdRequest) GetUpperLimit() float64 {
	if x != nil {
		return x.UpperLimit
	}
	return 0
}

func (x *UpdatePortfolioThresholdRequest) GetLowerLimit() float64 {
	if x != nil {
		return x.LowerLimit
	}
	return 0
}

func (x *UpdatePortfolioThresholdRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdatePortfolioExpirationDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortfolioId    uint32               `protobuf:"varint,1,opt,name=portfolio_id,json=portfolioId,proto3" json:"portfolio_id,omitempty"`
	ExpirationDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
	UserId         uint32               `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdatePortfolioExpirationDateRequest) Reset() {
	*x = UpdatePortfolioExpirationDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortfolioExpirationDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortfolioExpirationDateRequest) ProtoMessage() {}

func (x *UpdatePortfolioExpirationDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortfolioExpirationDateRequest.ProtoReflect.Descriptor instead.
func (*UpdatePortfolioExpirationDateRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{22}
}

func (x *UpdatePortfolioExpirationDateRequest) GetPortfolioId() uint32 {
	if x != nil {
		return x.PortfolioId
	}
	return 0
}

func (x *UpdatePortfolioExpirationDateRequest) GetExpirationDate() *timestamp.Timestamp {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

func (x *UpdatePortfolioExpirationDateRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdatePortfolioThresholdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePortfolioThresholdResponse) Reset() {
	*x = UpdatePortfolioThresholdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortfolioThresholdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortfolioThresholdResponse) ProtoMessage() {}

func (x *UpdatePortfolioThresholdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortfolioThresholdResponse.ProtoReflect.Descriptor instead.
func (*UpdatePortfolioThresholdResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{23}
}

type UpdatePortfolioExpirationDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePortfolioExpirationDateResponse) Reset() {
	*x = UpdatePortfolioExpirationDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePortfolioExpirationDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePortfolioExpirationDateResponse) ProtoMessage() {}

func (x *UpdatePortfolioExpirationDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePortfolioExpirationDateResponse.ProtoReflect.Descriptor instead.
func (*UpdatePortfolioExpirationDateResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{24}
}

type UpdateAssignedAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PortfolioId    uint32  `protobuf:"varint,1,opt,name=portfolio_id,json=portfolioId,proto3" json:"portfolio_id,omitempty"`
	AssignedAmount float64 `protobuf:"fixed64,2,opt,name=assigned_amount,json=assignedAmount,proto3" json:"assigned_amount,omitempty"`
	UserId         uint32  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UpdateAssignedAmountRequest) Reset() {
	*x = UpdateAssignedAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssignedAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssignedAmountRequest) ProtoMessage() {}

func (x *UpdateAssignedAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssignedAmountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssignedAmountRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateAssignedAmountRequest) GetPortfolioId() uint32 {
	if x != nil {
		return x.PortfolioId
	}
	return 0
}

func (x *UpdateAssignedAmountRequest) GetAssignedAmount() float64 {
	if x != nil {
		return x.AssignedAmount
	}
	return 0
}

func (x *UpdateAssignedAmountRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateAssignedAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAssignedAmountResponse) Reset() {
	*x = UpdateAssignedAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssignedAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssignedAmountResponse) ProtoMessage() {}

func (x *UpdateAssignedAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssignedAmountResponse.ProtoReflect.Descriptor instead.
func (*UpdateAssignedAmountResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{26}
}

type AssignedAmountInCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string            `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	UserId   uint32            `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Exchange commonpb.Exchange `protobuf:"varint,3,opt,name=exchange,proto3,enum=common.Exchange" json:"exchange,omitempty"`
}

func (x *AssignedAmountInCurrencyRequest) Reset() {
	*x = AssignedAmountInCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignedAmountInCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignedAmountInCurrencyRequest) ProtoMessage() {}

func (x *AssignedAmountInCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignedAmountInCurrencyRequest.ProtoReflect.Descriptor instead.
func (*AssignedAmountInCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{27}
}

func (x *AssignedAmountInCurrencyRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AssignedAmountInCurrencyRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AssignedAmountInCurrencyRequest) GetExchange() commonpb.Exchange {
	if x != nil {
		return x.Exchange
	}
	return commonpb.Exchange(0)
}

type AssignedAmountInCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AssignedAmountInCurrencyResponse) Reset() {
	*x = AssignedAmountInCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_portfolioManager_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignedAmountInCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignedAmountInCurrencyResponse) ProtoMessage() {}

func (x *AssignedAmountInCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_portfolioManager_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignedAmountInCurrencyResponse.ProtoReflect.Descriptor instead.
func (*AssignedAmountInCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_allprotos_portfolioManager_proto_rawDescGZIP(), []int{28}
}

func (x *AssignedAmountInCurrencyResponse) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_allprotos_portfolioManager_proto protoreflect.FileDescriptor

var file_allprotos_portfolioManager_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x6c, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x1a, 0x16, 0x61, 0x6c, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a,
	0x15, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd2, 0x03, 0x0a, 0x08, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x46, 0x65, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f,
	0x66, 0x65, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x46, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x05, 0x70,
	0x5f, 0x6e, 0x5f, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x4e, 0x4c, 0x12,
	0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x54,
	0x0a, 0x0c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa9, 0x02, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x70,
	0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x43, 0x0a, 0x0f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8d, 0x07, 0x0a, 0x09,
	0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x05, 0x70, 0x5f, 0x6e, 0x5f, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x4e, 0x4c, 0x12, 0x38, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x43,
	0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x04, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xf6, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50,
	0x0a, 0x0f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x7d, 0x0a, 0x12, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c,
	0x69, 0x6f, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22,
	0x22, 0x0a, 0x10, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x11, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x09, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x22, 0x68, 0x0a, 0x1a, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c,
	0x69, 0x6f, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1d, 0x0a,
	0x1b, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x97, 0x01, 0x0a,
	0x15, 0x50, 0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6f,
	0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x18, 0x0a, 0x16, 0x50, 0x61, 0x75, 0x73, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x70, 0x0a, 0x17, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72,
	0x0a, 0x19, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x9f, 0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x75, 0x70,
	0x70, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x43,
	0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x20,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1e,
	0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84,
	0x01, 0x0a, 0x1f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x20, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a,
	0xaa, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12,
	0x13, 0x0a, 0x0f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x4f, 0x5f, 0x4f, 0x50,
	0x45, 0x4e, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54,
	0x4f, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e,
	0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x4f,
	0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x50, 0x45, 0x4e,
	0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x2a, 0x84, 0x02, 0x0a,
	0x0f, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x18, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x50, 0x4f, 0x52, 0x54,
	0x46, 0x4f, 0x4c, 0x49, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x1c,
	0x0a, 0x18, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x53, 0x55,
	0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13,
	0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10,
	0x03, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52,
	0x5f, 0x44, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x05, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x41, 0x4e,
	0x43, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x58, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x59, 0x4e, 0x43,
	0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x09, 0x12, 0x13,
	0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x4b, 0x45,
	0x59, 0x10, 0x0a, 0x32, 0xd8, 0x0a, 0x0a, 0x10, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x12, 0x28, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x12, 0x28, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c,
	0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x09, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x12, 0x22,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x13, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x12, 0x2c,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0e, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x12, 0x27, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c,
	0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x75, 0x73, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x69, 0x0a, 0x10, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x12, 0x29, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x55, 0x6e, 0x70, 0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x12, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x31, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x75, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x18, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x31, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x2e,
	0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x16,
	0x5a, 0x14, 0x2e, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_allprotos_portfolioManager_proto_rawDescOnce sync.Once
	file_allprotos_portfolioManager_proto_rawDescData = file_allprotos_portfolioManager_proto_rawDesc
)

func file_allprotos_portfolioManager_proto_rawDescGZIP() []byte {
	file_allprotos_portfolioManager_proto_rawDescOnce.Do(func() {
		file_allprotos_portfolioManager_proto_rawDescData = protoimpl.X.CompressGZIP(file_allprotos_portfolioManager_proto_rawDescData)
	})
	return file_allprotos_portfolioManager_proto_rawDescData
}

var file_allprotos_portfolioManager_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_allprotos_portfolioManager_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_allprotos_portfolioManager_proto_goTypes = []any{
	(PositionStatus)(0),                           // 0: portfoliomanager.PositionStatus
	(PortfolioStatus)(0),                          // 1: portfoliomanager.PortfolioStatus
	(*PaginationDataRequest)(nil),                 // 2: portfoliomanager.PaginationDataRequest
	(*DeletePortfolioRequest)(nil),                // 3: portfoliomanager.DeletePortfolioRequest
	(*DeletePortfolioResponse)(nil),               // 4: portfoliomanager.DeletePortfolioResponse
	(*Position)(nil),                              // 5: portfoliomanager.Position
	(*ValueHistory)(nil),                          // 6: portfoliomanager.ValueHistory
	(*CreatePortfolioRequest)(nil),                // 7: portfoliomanager.CreatePortfolioRequest
	(*CreatePortfolioResponse)(nil),               // 8: portfoliomanager.CreatePortfolioResponse
	(*Portfolio)(nil),                             // 9: portfoliomanager.Portfolio
	(*Meta)(nil),                                  // 10: portfoliomanager.Meta
	(*PortfoliosRequest)(nil),                     // 11: portfoliomanager.PortfoliosRequest
	(*PortfoliosResponse)(nil),                    // 12: portfoliomanager.PortfoliosResponse
	(*PortfolioRequest)(nil),                      // 13: portfoliomanager.PortfolioRequest
	(*PortfolioResponse)(nil),                     // 14: portfoliomanager.PortfolioResponse
	(*DeactivatePortfolioRequest)(nil),            // 15: portfoliomanager.DeactivatePortfolioRequest
	(*DeactivatePortfolioResponse)(nil),           // 16: portfoliomanager.DeactivatePortfolioResponse
	(*PausePortfolioRequest)(nil),                 // 17: portfoliomanager.PausePortfolioRequest
	(*PausePortfolioResponse)(nil),                // 18: portfoliomanager.PausePortfolioResponse
	(*UnpausePortfolioRequest)(nil),               // 19: portfoliomanager.UnpausePortfolioRequest
	(*UnpausePortfolioResponse)(nil),              // 20: portfoliomanager.UnpausePortfolioResponse
	(*CancelSubscriptionRequest)(nil),             // 21: portfoliomanager.CancelSubscriptionRequest
	(*CancelSubscriptionResponse)(nil),            // 22: portfoliomanager.CancelSubscriptionResponse
	(*UpdatePortfolioThresholdRequest)(nil),       // 23: portfoliomanager.UpdatePortfolioThresholdRequest
	(*UpdatePortfolioExpirationDateRequest)(nil),  // 24: portfoliomanager.UpdatePortfolioExpirationDateRequest
	(*UpdatePortfolioThresholdResponse)(nil),      // 25: portfoliomanager.UpdatePortfolioThresholdResponse
	(*UpdatePortfolioExpirationDateResponse)(nil), // 26: portfoliomanager.UpdatePortfolioExpirationDateResponse
	(*UpdateAssignedAmountRequest)(nil),           // 27: portfoliomanager.UpdateAssignedAmountRequest
	(*UpdateAssignedAmountResponse)(nil),          // 28: portfoliomanager.UpdateAssignedAmountResponse
	(*AssignedAmountInCurrencyRequest)(nil),       // 29: portfoliomanager.AssignedAmountInCurrencyRequest
	(*AssignedAmountInCurrencyResponse)(nil),      // 30: portfoliomanager.AssignedAmountInCurrencyResponse
	(*timestamp.Timestamp)(nil),                   // 31: google.protobuf.Timestamp
	(commonpb.Exchange)(0),                        // 32: common.Exchange
}
var file_allprotos_portfolioManager_proto_depIdxs = []int32{
	31, // 0: portfoliomanager.Position.open_date:type_name -> google.protobuf.Timestamp
	31, // 1: portfoliomanager.Position.close_date:type_name -> google.protobuf.Timestamp
	0,  // 2: portfoliomanager.Position.status:type_name -> portfoliomanager.PositionStatus
	31, // 3: portfoliomanager.ValueHistory.date:type_name -> google.protobuf.Timestamp
	31, // 4: portfoliomanager.CreatePortfolioRequest.expiration_date:type_name -> google.protobuf.Timestamp
	32, // 5: portfoliomanager.Portfolio.exchange:type_name -> common.Exchange
	5,  // 6: portfoliomanager.Portfolio.positions:type_name -> portfoliomanager.Position
	6,  // 7: portfoliomanager.Portfolio.value_history:type_name -> portfoliomanager.ValueHistory
	1,  // 8: portfoliomanager.Portfolio.status:type_name -> portfoliomanager.PortfolioStatus
	31, // 9: portfoliomanager.Portfolio.created_at:type_name -> google.protobuf.Timestamp
	31, // 10: portfoliomanager.Portfolio.expiration_date:type_name -> google.protobuf.Timestamp
	1,  // 11: portfoliomanager.PortfoliosRequest.status:type_name -> portfoliomanager.PortfolioStatus
	2,  // 12: portfoliomanager.PortfoliosRequest.pagination_data:type_name -> portfoliomanager.PaginationDataRequest
	9,  // 13: portfoliomanager.PortfoliosResponse.portfolios:type_name -> portfoliomanager.Portfolio
	10, // 14: portfoliomanager.PortfoliosResponse.meta:type_name -> portfoliomanager.Meta
	9,  // 15: portfoliomanager.PortfolioResponse.portfolio:type_name -> portfoliomanager.Portfolio
	31, // 16: portfoliomanager.UpdatePortfolioExpirationDateRequest.expiration_date:type_name -> google.protobuf.Timestamp
	32, // 17: portfoliomanager.AssignedAmountInCurrencyRequest.exchange:type_name -> common.Exchange
	7,  // 18: portfoliomanager.PortfolioService.CreatePortfolio:input_type -> portfoliomanager.CreatePortfolioRequest
	3,  // 19: portfoliomanager.PortfolioService.DeletePortfolio:input_type -> portfoliomanager.DeletePortfolioRequest
	11, // 20: portfoliomanager.PortfolioService.Portfolios:input_type -> portfoliomanager.PortfoliosRequest
	13, // 21: portfoliomanager.PortfolioService.Portfolio:input_type -> portfoliomanager.PortfolioRequest
	15, // 22: portfoliomanager.PortfolioService.DeactivatePortfolio:input_type -> portfoliomanager.DeactivatePortfolioRequest
	17, // 23: portfoliomanager.PortfolioService.PausePortfolio:input_type -> portfoliomanager.PausePortfolioRequest
	19, // 24: portfoliomanager.PortfolioService.UnpausePortfolio:input_type -> portfoliomanager.UnpausePortfolioRequest
	21, // 25: portfoliomanager.PortfolioService.CancelSubscription:input_type -> portfoliomanager.CancelSubscriptionRequest
	23, // 26: portfoliomanager.PortfolioService.UpdatePortfolioThreshold:input_type -> portfoliomanager.UpdatePortfolioThresholdRequest
	27, // 27: portfoliomanager.PortfolioService.UpdateAssignedAmount:input_type -> portfoliomanager.UpdateAssignedAmountRequest
	29, // 28: portfoliomanager.PortfolioService.AssignedAmountInCurrency:input_type -> portfoliomanager.AssignedAmountInCurrencyRequest
	24, // 29: portfoliomanager.PortfolioService.UpdatePortfolioExpirationDate:input_type -> portfoliomanager.UpdatePortfolioExpirationDateRequest
	8,  // 30: portfoliomanager.PortfolioService.CreatePortfolio:output_type -> portfoliomanager.CreatePortfolioResponse
	4,  // 31: portfoliomanager.PortfolioService.DeletePortfolio:output_type -> portfoliomanager.DeletePortfolioResponse
	12, // 32: portfoliomanager.PortfolioService.Portfolios:output_type -> portfoliomanager.PortfoliosResponse
	14, // 33: portfoliomanager.PortfolioService.Portfolio:output_type -> portfoliomanager.PortfolioResponse
	16, // 34: portfoliomanager.PortfolioService.DeactivatePortfolio:output_type -> portfoliomanager.DeactivatePortfolioResponse
	18, // 35: portfoliomanager.PortfolioService.PausePortfolio:output_type -> portfoliomanager.PausePortfolioResponse
	20, // 36: portfoliomanager.PortfolioService.UnpausePortfolio:output_type -> portfoliomanager.UnpausePortfolioResponse
	22, // 37: portfoliomanager.PortfolioService.CancelSubscription:output_type -> portfoliomanager.CancelSubscriptionResponse
	25, // 38: portfoliomanager.PortfolioService.UpdatePortfolioThreshold:output_type -> portfoliomanager.UpdatePortfolioThresholdResponse
	28, // 39: portfoliomanager.PortfolioService.UpdateAssignedAmount:output_type -> portfoliomanager.UpdateAssignedAmountResponse
	30, // 40: portfoliomanager.PortfolioService.AssignedAmountInCurrency:output_type -> portfoliomanager.AssignedAmountInCurrencyResponse
	26, // 41: portfoliomanager.PortfolioService.UpdatePortfolioExpirationDate:output_type -> portfoliomanager.UpdatePortfolioExpirationDateResponse
	30, // [30:42] is the sub-list for method output_type
	18, // [18:30] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_allprotos_portfolioManager_proto_init() }
func file_allprotos_portfolioManager_proto_init() {
	if File_allprotos_portfolioManager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_allprotos_portfolioManager_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PaginationDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePortfolioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DeletePortfolioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ValueHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePortfolioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePortfolioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Portfolio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PortfoliosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PortfoliosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PortfolioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PortfolioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeactivatePortfolioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeactivatePortfolioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*PausePortfolioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PausePortfolioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UnpausePortfolioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UnpausePortfolioResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CancelSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CancelSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePortfolioThresholdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePortfolioExpirationDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePortfolioThresholdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePortfolioExpirationDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssignedAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateAssignedAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*AssignedAmountInCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_portfolioManager_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*AssignedAmountInCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_allprotos_portfolioManager_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_allprotos_portfolioManager_proto_goTypes,
		DependencyIndexes: file_allprotos_portfolioManager_proto_depIdxs,
		EnumInfos:         file_allprotos_portfolioManager_proto_enumTypes,
		MessageInfos:      file_allprotos_portfolioManager_proto_msgTypes,
	}.Build()
	File_allprotos_portfolioManager_proto = out.File
	file_allprotos_portfolioManager_proto_rawDesc = nil
	file_allprotos_portfolioManager_proto_goTypes = nil
	file_allprotos_portfolioManager_proto_depIdxs = nil
}
