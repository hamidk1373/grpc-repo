// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: allprotos/common.proto

package commonpb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Market int32

const (
	Market_UNKNOWN_MARKET Market = 0
	Market_CRYPTO_SPOT    Market = 1
	Market_CRYPTO_FUTURE  Market = 2
)

// Enum value maps for Market.
var (
	Market_name = map[int32]string{
		0: "UNKNOWN_MARKET",
		1: "CRYPTO_SPOT",
		2: "CRYPTO_FUTURE",
	}
	Market_value = map[string]int32{
		"UNKNOWN_MARKET": 0,
		"CRYPTO_SPOT":    1,
		"CRYPTO_FUTURE":  2,
	}
)

func (x Market) Enum() *Market {
	p := new(Market)
	*p = x
	return p
}

func (x Market) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Market) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_common_proto_enumTypes[0].Descriptor()
}

func (Market) Type() protoreflect.EnumType {
	return &file_allprotos_common_proto_enumTypes[0]
}

func (x Market) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Market.Descriptor instead.
func (Market) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{0}
}

type Exchange int32

const (
	Exchange_UNKNOWN_EXCHANGE   Exchange = 0
	Exchange_BINANCE            Exchange = 1
	Exchange_NOBITEX            Exchange = 2
	Exchange_ABANTETHER         Exchange = 3
	Exchange_BINANCE_FUTURE     Exchange = 4
	Exchange_ABANTETHER_FUTURES Exchange = 5
)

// Enum value maps for Exchange.
var (
	Exchange_name = map[int32]string{
		0: "UNKNOWN_EXCHANGE",
		1: "BINANCE",
		2: "NOBITEX",
		3: "ABANTETHER",
		4: "BINANCE_FUTURE",
		5: "ABANTETHER_FUTURES",
	}
	Exchange_value = map[string]int32{
		"UNKNOWN_EXCHANGE":   0,
		"BINANCE":            1,
		"NOBITEX":            2,
		"ABANTETHER":         3,
		"BINANCE_FUTURE":     4,
		"ABANTETHER_FUTURES": 5,
	}
)

func (x Exchange) Enum() *Exchange {
	p := new(Exchange)
	*p = x
	return p
}

func (x Exchange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Exchange) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_common_proto_enumTypes[1].Descriptor()
}

func (Exchange) Type() protoreflect.EnumType {
	return &file_allprotos_common_proto_enumTypes[1]
}

func (x Exchange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Exchange.Descriptor instead.
func (Exchange) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{1}
}

type Strategy int32

const (
	Strategy_UNKNOWN_STRATEGY Strategy = 0
	Strategy_ICHIMOKU         Strategy = 1
	Strategy_ICHIMOKU_RSI     Strategy = 2
	Strategy_ICHIMOKU_SMA     Strategy = 3
	Strategy_ICHIMOKU_EMA     Strategy = 4
	Strategy_MA               Strategy = 5
	Strategy_RANDOM           Strategy = 6
	Strategy_ICHIMOKUV2       Strategy = 7
)

// Enum value maps for Strategy.
var (
	Strategy_name = map[int32]string{
		0: "UNKNOWN_STRATEGY",
		1: "ICHIMOKU",
		2: "ICHIMOKU_RSI",
		3: "ICHIMOKU_SMA",
		4: "ICHIMOKU_EMA",
		5: "MA",
		6: "RANDOM",
		7: "ICHIMOKUV2",
	}
	Strategy_value = map[string]int32{
		"UNKNOWN_STRATEGY": 0,
		"ICHIMOKU":         1,
		"ICHIMOKU_RSI":     2,
		"ICHIMOKU_SMA":     3,
		"ICHIMOKU_EMA":     4,
		"MA":               5,
		"RANDOM":           6,
		"ICHIMOKUV2":       7,
	}
)

func (x Strategy) Enum() *Strategy {
	p := new(Strategy)
	*p = x
	return p
}

func (x Strategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Strategy) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_common_proto_enumTypes[2].Descriptor()
}

func (Strategy) Type() protoreflect.EnumType {
	return &file_allprotos_common_proto_enumTypes[2]
}

func (x Strategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Strategy.Descriptor instead.
func (Strategy) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{2}
}

type Interval int32

const (
	Interval_UNKNOWN_INTERVAL Interval = 0
	Interval_MINUTES          Interval = 1
	Interval_THREE_MINUTES    Interval = 2
	Interval_FIVE_MINUTES     Interval = 3
	Interval_FIFTEEN_MINUTES  Interval = 4
	Interval_THIRTY_MINUTES   Interval = 5
	Interval_HOUR             Interval = 6
	Interval_TWO_HOURS        Interval = 7
	Interval_FOUR_HOURS       Interval = 8
	Interval_SIX_HOURS        Interval = 9
	Interval_EIGHT_HOURS      Interval = 10
	Interval_TWELVE_HOURS     Interval = 11
	Interval_DAY              Interval = 12
	Interval_THREE_DAYS       Interval = 13
	Interval_WEEK             Interval = 14
	Interval_MONTH            Interval = 15
)

// Enum value maps for Interval.
var (
	Interval_name = map[int32]string{
		0:  "UNKNOWN_INTERVAL",
		1:  "MINUTES",
		2:  "THREE_MINUTES",
		3:  "FIVE_MINUTES",
		4:  "FIFTEEN_MINUTES",
		5:  "THIRTY_MINUTES",
		6:  "HOUR",
		7:  "TWO_HOURS",
		8:  "FOUR_HOURS",
		9:  "SIX_HOURS",
		10: "EIGHT_HOURS",
		11: "TWELVE_HOURS",
		12: "DAY",
		13: "THREE_DAYS",
		14: "WEEK",
		15: "MONTH",
	}
	Interval_value = map[string]int32{
		"UNKNOWN_INTERVAL": 0,
		"MINUTES":          1,
		"THREE_MINUTES":    2,
		"FIVE_MINUTES":     3,
		"FIFTEEN_MINUTES":  4,
		"THIRTY_MINUTES":   5,
		"HOUR":             6,
		"TWO_HOURS":        7,
		"FOUR_HOURS":       8,
		"SIX_HOURS":        9,
		"EIGHT_HOURS":      10,
		"TWELVE_HOURS":     11,
		"DAY":              12,
		"THREE_DAYS":       13,
		"WEEK":             14,
		"MONTH":            15,
	}
)

func (x Interval) Enum() *Interval {
	p := new(Interval)
	*p = x
	return p
}

func (x Interval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interval) Descriptor() protoreflect.EnumDescriptor {
	return file_allprotos_common_proto_enumTypes[3].Descriptor()
}

func (Interval) Type() protoreflect.EnumType {
	return &file_allprotos_common_proto_enumTypes[3]
}

func (x Interval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interval.Descriptor instead.
func (Interval) EnumDescriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{3}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Config) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type IndicatorConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Configs []*Config `protobuf:"bytes,2,rep,name=configs,proto3" json:"configs,omitempty"`
}

func (x *IndicatorConfig) Reset() {
	*x = IndicatorConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicatorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicatorConfig) ProtoMessage() {}

func (x *IndicatorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicatorConfig.ProtoReflect.Descriptor instead.
func (*IndicatorConfig) Descriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{1}
}

func (x *IndicatorConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndicatorConfig) GetConfigs() []*Config {
	if x != nil {
		return x.Configs
	}
	return nil
}

type OhlcvCalculation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Config string  `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	Value  float64 `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *OhlcvCalculation) Reset() {
	*x = OhlcvCalculation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OhlcvCalculation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OhlcvCalculation) ProtoMessage() {}

func (x *OhlcvCalculation) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OhlcvCalculation.ProtoReflect.Descriptor instead.
func (*OhlcvCalculation) Descriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{2}
}

func (x *OhlcvCalculation) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *OhlcvCalculation) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *OhlcvCalculation) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Ohlcv struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenTime         *timestamp.Timestamp `protobuf:"bytes,1,opt,name=open_time,json=openTime,proto3" json:"open_time,omitempty"`
	Open             float64              `protobuf:"fixed64,2,opt,name=open,proto3" json:"open,omitempty"`
	High             float64              `protobuf:"fixed64,3,opt,name=high,proto3" json:"high,omitempty"`
	Low              float64              `protobuf:"fixed64,4,opt,name=low,proto3" json:"low,omitempty"`
	Close            float64              `protobuf:"fixed64,5,opt,name=close,proto3" json:"close,omitempty"`
	Volume           float64              `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
	CloseTime        *timestamp.Timestamp `protobuf:"bytes,7,opt,name=close_time,json=closeTime,proto3" json:"close_time,omitempty"`
	QuoteAssetVolume float64              `protobuf:"fixed64,8,opt,name=quote_asset_volume,json=quoteAssetVolume,proto3" json:"quote_asset_volume,omitempty"`
	NumberOfTrades   int32                `protobuf:"varint,9,opt,name=number_of_trades,json=numberOfTrades,proto3" json:"number_of_trades,omitempty"`
}

func (x *Ohlcv) Reset() {
	*x = Ohlcv{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ohlcv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ohlcv) ProtoMessage() {}

func (x *Ohlcv) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ohlcv.ProtoReflect.Descriptor instead.
func (*Ohlcv) Descriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{3}
}

func (x *Ohlcv) GetOpenTime() *timestamp.Timestamp {
	if x != nil {
		return x.OpenTime
	}
	return nil
}

func (x *Ohlcv) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Ohlcv) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Ohlcv) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Ohlcv) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Ohlcv) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Ohlcv) GetCloseTime() *timestamp.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *Ohlcv) GetQuoteAssetVolume() float64 {
	if x != nil {
		return x.QuoteAssetVolume
	}
	return 0
}

func (x *Ohlcv) GetNumberOfTrades() int32 {
	if x != nil {
		return x.NumberOfTrades
	}
	return 0
}

type OHLCVWithCalculations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ohlcv        *Ohlcv              `protobuf:"bytes,1,opt,name=ohlcv,proto3" json:"ohlcv,omitempty"`
	Calculations []*OhlcvCalculation `protobuf:"bytes,2,rep,name=calculations,proto3" json:"calculations,omitempty"`
}

func (x *OHLCVWithCalculations) Reset() {
	*x = OHLCVWithCalculations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OHLCVWithCalculations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OHLCVWithCalculations) ProtoMessage() {}

func (x *OHLCVWithCalculations) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OHLCVWithCalculations.ProtoReflect.Descriptor instead.
func (*OHLCVWithCalculations) Descriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{4}
}

func (x *OHLCVWithCalculations) GetOhlcv() *Ohlcv {
	if x != nil {
		return x.Ohlcv
	}
	return nil
}

func (x *OHLCVWithCalculations) GetCalculations() []*OhlcvCalculation {
	if x != nil {
		return x.Calculations
	}
	return nil
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{5}
}

func (x *Meta) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Meta) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Meta) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PaginationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *PaginationData) Reset() {
	*x = PaginationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_allprotos_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationData) ProtoMessage() {}

func (x *PaginationData) ProtoReflect() protoreflect.Message {
	mi := &file_allprotos_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationData.ProtoReflect.Descriptor instead.
func (*PaginationData) Descriptor() ([]byte, []int) {
	return file_allprotos_common_proto_rawDescGZIP(), []int{6}
}

func (x *PaginationData) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationData) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

var File_allprotos_common_proto protoreflect.FileDescriptor

var file_allprotos_common_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x6c, 0x6c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x30, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x4f, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x02, 0x0a, 0x05, 0x4f, 0x68, 0x6c,
	0x63, 0x76, 0x12, 0x37, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f,
	0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x68,
	0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x15, 0x4f, 0x48, 0x4c, 0x43, 0x56, 0x57,
	0x69, 0x74, 0x68, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x23, 0x0a, 0x05, 0x6f, 0x68, 0x6c, 0x63, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x52, 0x05, 0x6f,
	0x68, 0x6c, 0x63, 0x76, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x68, 0x6c, 0x63, 0x76, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x4a, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x3e,
	0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x2a, 0x40,
	0x0a, 0x06, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b,
	0x43, 0x52, 0x59, 0x50, 0x54, 0x4f, 0x5f, 0x53, 0x50, 0x4f, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x43, 0x52, 0x59, 0x50, 0x54, 0x4f, 0x5f, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x10, 0x02,
	0x2a, 0x76, 0x0a, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x49, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x42, 0x49, 0x54, 0x45, 0x58, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a,
	0x41, 0x42, 0x41, 0x4e, 0x54, 0x45, 0x54, 0x48, 0x45, 0x52, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e,
	0x42, 0x49, 0x4e, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x46, 0x55, 0x54, 0x55, 0x52, 0x45, 0x10, 0x04,
	0x12, 0x16, 0x0a, 0x12, 0x41, 0x42, 0x41, 0x4e, 0x54, 0x45, 0x54, 0x48, 0x45, 0x52, 0x5f, 0x46,
	0x55, 0x54, 0x55, 0x52, 0x45, 0x53, 0x10, 0x05, 0x2a, 0x88, 0x01, 0x0a, 0x08, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x53, 0x54, 0x52, 0x41, 0x54, 0x45, 0x47, 0x59, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49,
	0x43, 0x48, 0x49, 0x4d, 0x4f, 0x4b, 0x55, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x43, 0x48,
	0x49, 0x4d, 0x4f, 0x4b, 0x55, 0x5f, 0x52, 0x53, 0x49, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x49,
	0x43, 0x48, 0x49, 0x4d, 0x4f, 0x4b, 0x55, 0x5f, 0x53, 0x4d, 0x41, 0x10, 0x03, 0x12, 0x10, 0x0a,
	0x0c, 0x49, 0x43, 0x48, 0x49, 0x4d, 0x4f, 0x4b, 0x55, 0x5f, 0x45, 0x4d, 0x41, 0x10, 0x04, 0x12,
	0x06, 0x0a, 0x02, 0x4d, 0x41, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x41, 0x4e, 0x44, 0x4f,
	0x4d, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x43, 0x48, 0x49, 0x4d, 0x4f, 0x4b, 0x55, 0x56,
	0x32, 0x10, 0x07, 0x2a, 0x84, 0x02, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x56, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45,
	0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x4d, 0x49, 0x4e,
	0x55, 0x54, 0x45, 0x53, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x56, 0x45, 0x5f, 0x4d,
	0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x46, 0x54,
	0x45, 0x45, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x10, 0x04, 0x12, 0x12, 0x0a,
	0x0e, 0x54, 0x48, 0x49, 0x52, 0x54, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x10,
	0x05, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x55, 0x52, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x54,
	0x57, 0x4f, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4f,
	0x55, 0x52, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49,
	0x58, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x49, 0x47,
	0x48, 0x54, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x57,
	0x45, 0x4c, 0x56, 0x45, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x53, 0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03,
	0x44, 0x41, 0x59, 0x10, 0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x44,
	0x41, 0x59, 0x53, 0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x0e, 0x12,
	0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x0f, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x68, 0x61, 0x6e, 0x70, 0x61, 0x6e,
	0x7a, 0x65, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_allprotos_common_proto_rawDescOnce sync.Once
	file_allprotos_common_proto_rawDescData = file_allprotos_common_proto_rawDesc
)

func file_allprotos_common_proto_rawDescGZIP() []byte {
	file_allprotos_common_proto_rawDescOnce.Do(func() {
		file_allprotos_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_allprotos_common_proto_rawDescData)
	})
	return file_allprotos_common_proto_rawDescData
}

var file_allprotos_common_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_allprotos_common_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_allprotos_common_proto_goTypes = []any{
	(Market)(0),                   // 0: common.Market
	(Exchange)(0),                 // 1: common.Exchange
	(Strategy)(0),                 // 2: common.Strategy
	(Interval)(0),                 // 3: common.Interval
	(*Config)(nil),                // 4: common.Config
	(*IndicatorConfig)(nil),       // 5: common.IndicatorConfig
	(*OhlcvCalculation)(nil),      // 6: common.OhlcvCalculation
	(*Ohlcv)(nil),                 // 7: common.Ohlcv
	(*OHLCVWithCalculations)(nil), // 8: common.OHLCVWithCalculations
	(*Meta)(nil),                  // 9: common.Meta
	(*PaginationData)(nil),        // 10: common.PaginationData
	(*timestamp.Timestamp)(nil),   // 11: google.protobuf.Timestamp
}
var file_allprotos_common_proto_depIdxs = []int32{
	4,  // 0: common.IndicatorConfig.configs:type_name -> common.Config
	11, // 1: common.Ohlcv.open_time:type_name -> google.protobuf.Timestamp
	11, // 2: common.Ohlcv.close_time:type_name -> google.protobuf.Timestamp
	7,  // 3: common.OHLCVWithCalculations.ohlcv:type_name -> common.Ohlcv
	6,  // 4: common.OHLCVWithCalculations.calculations:type_name -> common.OhlcvCalculation
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_allprotos_common_proto_init() }
func file_allprotos_common_proto_init() {
	if File_allprotos_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_allprotos_common_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_common_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*IndicatorConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_common_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*OhlcvCalculation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_common_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Ohlcv); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_common_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*OHLCVWithCalculations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_common_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_allprotos_common_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PaginationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_allprotos_common_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_allprotos_common_proto_goTypes,
		DependencyIndexes: file_allprotos_common_proto_depIdxs,
		EnumInfos:         file_allprotos_common_proto_enumTypes,
		MessageInfos:      file_allprotos_common_proto_msgTypes,
	}.Build()
	File_allprotos_common_proto = out.File
	file_allprotos_common_proto_rawDesc = nil
	file_allprotos_common_proto_goTypes = nil
	file_allprotos_common_proto_depIdxs = nil
}
